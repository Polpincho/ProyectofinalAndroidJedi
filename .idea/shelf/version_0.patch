Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/MediaPlayerServ.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/MediaPlayerServ.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/MediaPlayerServ.java	(revision )
@@ -0,0 +1,161 @@
+package com.example.polpincho.proyectofinal;
+
+import android.app.Service;
+import android.content.Intent;
+import android.media.MediaPlayer;
+import android.os.Binder;
+import android.os.Environment;
+import android.os.IBinder;
+import android.support.annotation.Nullable;
+
+import java.io.File;
+import java.io.IOException;
+import java.util.ArrayList;
+
+public class MediaPlayerServ extends Service {
+
+    // Binder given to clients
+
+    private final IBinder mBinder = new MediaPlayerBinder();
+    private MediaPlayer mediaPlayer = new MediaPlayer();
+    private Boolean muted = false;
+    private String songlist[];
+    File Music;
+    private int pos = 0;
+    private boolean directory = false;
+
+    public boolean play() {
+        if (mediaPlayer.isPlaying()){
+            mediaPlayer.pause();
+            return false;
+        }
+        else{
+            mediaPlayer.start();
+            return true;
+        }
+    }
+
+    public boolean SetVolume() {
+        if (muted){
+            mediaPlayer.setVolume(1, 1);
+            muted = false;
+            return false;
+        }
+        else{
+            mediaPlayer.setVolume(0, 0);
+            muted = true;
+            return true;
+        }
+    }
+
+    public String next(){
+        if (directory) {
+            ++pos;
+            pos = pos % songlist.length;
+            mediaPlayer.stop();
+            mediaPlayer.reset();
+            mediaPlayer = null;
+            assigna();
+            mediaPlayer.start();
+            return songlist[pos];
+        }
+        else{
+            Replay();
+            return "demo";
+        }
+    }
+
+    public String previous() {
+        if (directory) {
+            if (pos != 0) {
+                --pos;
+                pos = pos % songlist.length;
+            } else pos = songlist.length - 1;
+            mediaPlayer.stop();
+            mediaPlayer.reset();
+            mediaPlayer = null;
+            assigna();
+            mediaPlayer.start();
+            return songlist[pos];
+        }
+        else{
+            Replay();
+            return "data0";
+        }
+    }
+
+    public boolean Replay() {
+        boolean playing = mediaPlayer.isPlaying();
+        mediaPlayer.stop();
+
+        mediaPlayer.reset();
+        mediaPlayer = null;
+
+        assigna();
+        mediaPlayer.start();
+        return playing;
+    }
+
+    public boolean Stop() {
+        boolean playing = mediaPlayer.isPlaying();
+        mediaPlayer.stop();
+        mediaPlayer.reset();
+        mediaPlayer = null;
+        assigna();
+        return playing;
+    }
+
+    public class MediaPlayerBinder extends Binder {
+        MediaPlayerServ getService() {
+            return MediaPlayerServ.this;
+        }
+    }
+
+
+    public MediaPlayerServ() {
+    }
+
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        mediaPlayer = MediaPlayer.create(this, R.raw.data0);
+        File SDcard = Environment.getExternalStorageDirectory();
+        Music = new File(SDcard.getAbsolutePath()+"/Music");
+        if (Music.exists()) directory = true;
+        songlist = Music.list();
+        assigna();
+
+
+
+    }
+
+   private void assigna(){
+       if (directory) {
+           mediaPlayer = new MediaPlayer();
+           MediaPlayer.OnCompletionListener li = new MediaPlayer.OnCompletionListener() {
+               @Override
+               public void onCompletion(android.media.MediaPlayer mp) {
+                   next();
+                   //setSong();
+               }
+           };
+
+
+           String aux = (Music.getAbsolutePath() + "/" + songlist[pos]);
+           try {
+               mediaPlayer.setDataSource(aux);
+               mediaPlayer.prepare();
+               mediaPlayer.setOnCompletionListener(li);
+           } catch (IOException e) {
+               e.printStackTrace();
+           }
+       }
+       else mediaPlayer = MediaPlayer.create(this, R.raw.data0);
+   }
+
+    @Nullable
+    @Override
+    public IBinder onBind(Intent intent) {
+        return mBinder;
+    }
+}
Index: ../Git final/Proyectofinal/app/src/main/res/layout/activity_reproductor.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout/activity_reproductor.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout/activity_reproductor.xml	(revision )
@@ -0,0 +1,78 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.example.polpincho.proyectofinal.Reproductor">
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:minHeight="?attr/actionBarSize"
+        android:background="@color/colorPrimary"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+    </android.support.v7.widget.Toolbar>
+
+    <Button
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:id="@+id/stopea"
+        android:background="@drawable/ic_stop_white_48dp"
+        android:layout_alignTop="@+id/playea"
+        android:layout_toStartOf="@+id/playea"
+        android:layout_marginEnd="47dp" />
+
+    <Button
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:id="@+id/playea"
+        android:background="@drawable/ic_play_arrow_white_48dp"
+        android:layout_gravity="right"
+        android:layout_below="@+id/titlesong"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="134dp" />
+
+    <Button
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:id="@+id/replay"
+        android:background="@drawable/ic_replay_white_48dp"
+        android:layout_marginStart="44dp"
+        android:layout_above="@+id/mutea"
+        android:layout_toEndOf="@+id/playea" />
+
+    <Button
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:id="@+id/ante"
+        android:background="@drawable/ic_skip_previous_white_48dp"
+        android:layout_alignTop="@+id/mutea"
+        android:layout_alignStart="@+id/stopea" />
+
+    <Button
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:id="@+id/mutea"
+        android:background="@drawable/ic_volume_mute_white_48dp"
+        android:layout_marginTop="69dp"
+        android:layout_below="@+id/playea"
+        android:layout_toEndOf="@+id/stopea" />
+
+    <Button
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:id="@+id/nexta"
+        android:background="@drawable/ic_skip_next_white_48dp"
+        android:layout_alignTop="@+id/mutea"
+        android:layout_alignStart="@+id/replay" />
+
+    <TextView
+        android:layout_width="300dp"
+        android:layout_height="wrap_content"
+        android:textAppearance="?android:attr/textAppearanceLarge"
+        android:text="Song name"
+        android:id="@+id/titlesong"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="150dp"
+        android:textAlignment="center" />
+</RelativeLayout>
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/User.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/User.java	(revision )
@@ -0,0 +1,57 @@
+package com.example.polpincho.proyectofinal;
+
+/**
+ * Created by polpincho on 01/02/2016.
+ */
+public class User {
+
+
+    private String uri;
+    private String username;
+    private String mail;
+    private int puntuation;
+
+    User(String username, String mail, String uri,int puntuation){
+        this.username = username;
+        this.mail = mail;
+        this.puntuation = puntuation;
+        this.uri = uri;
+
+    }
+    User(){
+
+    }
+
+    public String getUsername() {
+        return username;
+    }
+
+    public void setUsername(String username) {
+        this.username = username;
+    }
+
+    public String getMail() {
+        return mail;
+    }
+
+    public void setMail(String mail) {
+        this.mail = mail;
+    }
+
+    public int getPuntuation() {
+        return puntuation;
+    }
+
+    public void setPuntuation(int puntuation) {
+        this.puntuation = puntuation;
+    }
+
+    public String getUri() {
+        return uri;
+    }
+
+    public void setUri(String uri) {
+        this.uri = uri;
+    }
+}
+
Index: ../Git final/Proyectofinal/app/src/main/res/menu/menu_in_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/menu/menu_in_menu.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/menu/menu_in_menu.xml	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+xmlns:app="http://schemas.android.com/apk/res-auto"
+xmlns:tools="http://schemas.android.com/tools"
+tools:context="com.example.polpincho.proyectofinal.InMenu">
+
+    <item android:id="@+id/MenuLogOut"
+        android:title="Log Out"
+        android:icon="@drawable/ic_exit_to_app_white_48dp"
+        app:showAsAction="ifRoom">
+    </item>
+
+</menu>
\ No newline at end of file
Index: ../Git final/Proyectofinal/.idea/.name
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/.idea/.name	(revision )
+++ ../Git final/Proyectofinal/.idea/.name	(revision )
@@ -0,0 +1,1 @@
+Proyecto final
\ No newline at end of file
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/CustomAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/CustomAdapter.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/CustomAdapter.java	(revision )
@@ -0,0 +1,94 @@
+package com.example.polpincho.proyectofinal;
+
+import android.net.Uri;
+import android.provider.MediaStore;
+import android.support.v7.widget.RecyclerView;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import com.example.polpincho.proyectofinal.persistencia.BDUser;
+
+import java.io.File;
+import java.io.IOException;
+import java.net.URI;
+import java.util.ArrayList;
+
+/**
+ * Created by polpincho on 01/02/2016.
+ */
+public class CustomAdapter extends RecyclerView.Adapter<CustomAdapter.AdapterViewHolder>{
+
+
+    ArrayList<User> users;
+    private BDUser bduser;
+
+    CustomAdapter(ArrayList<User> data){
+            this.users = data;
+    }
+
+
+    @Override
+    public CustomAdapter.AdapterViewHolder onCreateViewHolder(ViewGroup viewGroup, int i) {
+        //Instancia un layout XML en la correspondiente vista.
+        LayoutInflater inflater = LayoutInflater.from(viewGroup.getContext());
+        //Inflamos en la vista el layout para cada elemento
+        View view = inflater.inflate(R.layout.rank, viewGroup, false);
+        return new AdapterViewHolder(view);
+    }
+
+    @Override
+    public void onBindViewHolder(CustomAdapter.AdapterViewHolder adapterViewholder, int position) {
+        //int iconLayout = users.get(position).getPuntuation();
+        Log.v("haha","user name: " + users.get(position).getUsername());
+        Log.v("haha", "user mail: " + users.get(position).getMail());
+        Log.v("haha", "user mail: " + users.get(position).getPuntuation());
+        String aux = users.get(position).getUri();
+        if (aux.equals("NULL")){
+            adapterViewholder.icon.setImageDrawable(adapterViewholder.v.getResources().getDrawable(R.drawable.default_user));
+        }
+        else {
+            adapterViewholder.icon.setImageURI(Uri.parse(aux));
+        }
+        adapterViewholder.username.setText(users.get(position).getUsername());
+        adapterViewholder.mail.setText(users.get(position).getMail());
+        adapterViewholder.punt.setText(users.get(position).getPuntuation() + "");
+
+    }
+
+    @Override
+    public int getItemCount() {
+        //Debemos retornar el tamaño de todos los elementos contenidos en el viewholder
+        //Por defecto es return 0 --> No se mostrará nada.
+        return users.size();
+    }
+
+
+
+    //Definimos una clase viewholder que funciona como adapter para
+    public class AdapterViewHolder extends RecyclerView.ViewHolder {
+    /*
+    *  Mantener una referencia a los elementos de nuestro ListView mientras el usuario realiza
+    *  scrolling en nuestra aplicación. Así que cada vez que obtenemos la vista de un item,
+    *  evitamos las frecuentes llamadas a findViewById, la cuál se realizaría únicamente la primera vez y el resto
+    *  llamaríamos a la referencia en el ViewHolder, ahorrándonos procesamiento.
+    */
+
+        public ImageView icon;
+        public TextView username;
+        public TextView mail;
+        public TextView punt;
+        public View v;
+        public AdapterViewHolder(View itemView) {
+            super(itemView);
+            this.v = itemView;
+            this.icon = (ImageView) itemView.findViewById(R.id.iconrank);
+            this.username = (TextView) itemView.findViewById(R.id.username);
+            this.mail = (TextView) itemView.findViewById(R.id.mail);
+            this.punt = (TextView) itemView.findViewById(R.id.punt);
+        }
+    }
+}
\ No newline at end of file
Index: ../Git final/Proyectofinal/app/src/main/res/layout-land/activity_calculator.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout-land/activity_calculator.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout-land/activity_calculator.xml	(revision )
@@ -0,0 +1,258 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.example.polpincho.proyectofinal.Calculator">
+
+
+    <LinearLayout
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:minHeight="?attr/actionBarSize"
+            android:background="@color/colorPrimary"
+            android:layout_width="match_parent"
+            android:layout_height="45dp">
+        </android.support.v7.widget.Toolbar>
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:id="@+id/visor"
+            android:maxLength="11"
+            android:gravity="center|right"
+            android:textSize="40dp"
+            android:layout_weight="90"
+            android:layout_marginRight="10dp"
+            android:text="0" />
+
+        <TableLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_weight="30">
+
+            <LinearLayout
+                android:orientation="horizontal"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:layout_weight="6">
+
+                <LinearLayout
+                    android:orientation="vertical"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:layout_weight="1">
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="7"
+                        android:id="@+id/button7"
+                        android:layout_column="0"
+                        android:layout_weight="1"
+                        android:textSize="30dp"
+                        android:textStyle="italic" />
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="4"
+                        android:id="@+id/button4"
+                        android:layout_column="0"
+                        android:layout_weight="1"
+                        android:textSize="30dp"
+                        android:textStyle="italic" />
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="1"
+                        android:id="@+id/button1"
+                        android:layout_column="0"
+                        android:layout_weight="1"
+                        android:textSize="30dp"
+                        android:textStyle="italic" />
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="."
+                        android:id="@+id/dot"
+                        android:layout_column="0"
+                        android:layout_weight="1"
+                        android:textSize="30dp" />
+                </LinearLayout>
+
+                <LinearLayout
+                    android:orientation="vertical"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:layout_weight="1">
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="8"
+                        android:id="@+id/button8"
+                        android:layout_column="1"
+                        android:layout_weight="1"
+                        android:textSize="30dp"
+                        android:textStyle="italic" />
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="5"
+                        android:id="@+id/button5"
+                        android:layout_column="1"
+                        android:layout_weight="1"
+                        android:textSize="30dp"
+                        android:textStyle="italic" />
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="2"
+                        android:id="@+id/button2"
+                        android:layout_column="1"
+                        android:layout_weight="1"
+                        android:textSize="30dp"
+                        android:textStyle="italic" />
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="0"
+                        android:id="@+id/button0"
+                        android:layout_column="1"
+                        android:layout_weight="1"
+                        android:textSize="30dp"
+                        android:textStyle="italic" />
+
+                </LinearLayout>
+
+                <LinearLayout
+                    android:orientation="vertical"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:layout_weight="1">
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="9"
+                        android:id="@+id/button9"
+                        android:layout_column="2"
+                        android:layout_weight="1"
+                        android:textSize="30dp"
+                        android:textStyle="italic" />
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="6"
+                        android:id="@+id/button6"
+                        android:layout_column="2"
+                        android:layout_weight="1"
+                        android:textSize="30dp"
+                        android:textStyle="italic" />
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="3"
+                        android:id="@+id/button3"
+                        android:layout_column="2"
+                        android:layout_weight="1"
+                        android:textSize="30dp"
+                        android:textStyle="italic" />
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="="
+                        android:id="@+id/equal"
+                        android:layout_column="2"
+                        android:layout_weight="1"
+                        android:textSize="30dp"
+                        android:onClick="equalpress" />
+                </LinearLayout>
+
+                <LinearLayout
+                    android:orientation="vertical"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:layout_weight="1">
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="+"
+                        android:id="@+id/sum"
+                        android:layout_column="3"
+                        android:layout_weight="1"
+                        android:textSize="30dp" />
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="-"
+                        android:id="@+id/minus"
+                        android:layout_column="3"
+                        android:layout_weight="1"
+                        android:textSize="30dp" />
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="X"
+                        android:id="@+id/multi"
+                        android:layout_column="3"
+                        android:layout_weight="1"
+                        android:textSize="30dp" />
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="/"
+                        android:id="@+id/divide"
+                        android:layout_column="3"
+                        android:layout_weight="1"
+                        android:textSize="30dp" />
+                </LinearLayout>
+
+                <LinearLayout
+                    android:orientation="vertical"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:layout_weight="1">
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="CE"
+                        android:id="@+id/borrar"
+                        android:layout_weight="1"
+                        android:textSize="20dp"
+                        android:gravity="center" />
+
+                    <Button
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:text="ANS"
+                        android:id="@+id/ans"
+                        android:layout_column="1"
+                        android:layout_weight="1"
+                        android:textSize="20dp"
+                        android:textStyle="italic" />
+                </LinearLayout>
+            </LinearLayout>
+
+        </TableLayout>
+
+    </LinearLayout>
+
+</RelativeLayout>
Index: ../Git final/Proyectofinal/gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- ../Git final/Proyectofinal/gradle/wrapper/gradle-wrapper.properties	(revision )
+++ ../Git final/Proyectofinal/gradle/wrapper/gradle-wrapper.properties	(revision )
@@ -0,0 +1,6 @@
+#Wed Oct 21 11:34:03 PDT 2015
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.8-all.zip
Index: ../Git final/Proyectofinal/app/src/main/res/layout/activity_pager_holder.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout/activity_pager_holder.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout/activity_pager_holder.xml	(revision )
@@ -0,0 +1,28 @@
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar_page_holder"
+        android:title="Memory"
+        android:minHeight="?attr/actionBarSize"
+        android:background="@color/colorPrimary"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+    </android.support.v7.widget.Toolbar>
+
+    <android.support.design.widget.TabLayout
+        android:id="@+id/sliding_tabs"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content" />
+
+    <android.support.v4.view.ViewPager
+        android:id="@+id/viewpager"
+        android:layout_width="match_parent"
+        android:layout_height="0px"
+        android:layout_weight="1"
+        android:foreground="#8b8b8b" />
+
+</LinearLayout>
Index: ../Git final/Proyectofinal/app/src/main/res/layout/activity_login.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout/activity_login.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout/activity_login.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:id="@+id/frameLayout"
+    android:layout_height="match_parent"
+    tools:context="com.example.polpincho.proyectofinal.Login">
+</FrameLayout>
Index: ../Git final/Proyectofinal/app/src/main/res/menu/menu_perfil_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/menu/menu_perfil_view.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/menu/menu_perfil_view.xml	(revision )
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    tools:context="com.example.polpincho.proyectofinal.Perfil">
+
+    <item android:id="@+id/PerfilViewGps"
+        android:title="GPS"
+        android:icon="@drawable/ic_my_location_white_48dp"
+        app:showAsAction="always">
+    </item>
+
+    <item android:id="@+id/PerfilViewExit"
+        android:title="Log Out"
+        android:icon="@drawable/ic_exit_to_app_white_48dp"
+        app:showAsAction="always">
+    </item>
+
+</menu>
\ No newline at end of file
Index: ../Git final/Proyectofinal/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/build.gradle	(revision )
+++ ../Git final/Proyectofinal/build.gradle	(revision )
@@ -0,0 +1,23 @@
+// Top-level build file where you can add configuration options common to all sub-projects/modules.
+
+buildscript {
+    repositories {
+        jcenter()
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:1.5.0'
+
+        // NOTE: Do not place your application dependencies here; they belong
+        // in the individual module build.gradle files
+    }
+}
+
+allprojects {
+    repositories {
+        jcenter()
+    }
+}
+
+task clean(type: Delete) {
+    delete rootProject.buildDir
+}
Index: ../Git final/Proyectofinal/gradlew
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/gradlew	(revision )
+++ ../Git final/Proyectofinal/gradlew	(revision )
@@ -0,0 +1,160 @@
+#!/usr/bin/env bash
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn ( ) {
+    echo "$*"
+}
+
+die ( ) {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+esac
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=$((i+1))
+    done
+    case $i in
+        (0) set -- ;;
+        (1) set -- "$args0" ;;
+        (2) set -- "$args0" "$args1" ;;
+        (3) set -- "$args0" "$args1" "$args2" ;;
+        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
+function splitJvmOpts() {
+    JVM_OPTS=("$@")
+}
+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
+JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+
+exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
Index: ../Git final/Proyectofinal/app/src/main/res/layout/fragment_memory.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout/fragment_memory.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout/fragment_memory.xml	(revision )
@@ -0,0 +1,434 @@
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.example.polpincho.proyectofinal.Memory">
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <LinearLayout
+            android:orientation="vertical"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent">
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:text="num:"
+                android:id="@+id/punt"
+                android:layout_gravity="center_horizontal|top"
+                android:layout_alignParentTop="true"
+                android:layout_alignParentStart="true"
+                android:layout_weight="3"
+                android:gravity="center|right" />
+
+            <LinearLayout
+                android:orientation="vertical"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:layout_weight="1">
+
+                <LinearLayout
+                    android:orientation="horizontal"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:layout_weight="1">
+
+                    <android.support.v7.widget.CardView
+                        xmlns:card_view="http://schemas.android.com/apk/res-auto"
+                        android:id="@+id/card_view1"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        card_view:cardCornerRadius="4dp"
+                        android:layout_alignParentLeft="true"
+                        android:layout_alignParentTop="true"
+                        android:gravity="center"
+                        android:layout_gravity="center"
+                        android:layout_weight="1"
+                        android:background="#000000">
+
+                        <ImageButton
+                            android:background="@drawable/poke"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:text="New Button"
+                            android:layout_gravity="right|top"
+
+                            android:id="@+id/button1" />
+
+                    </android.support.v7.widget.CardView>
+
+                    <android.support.v7.widget.CardView
+                        xmlns:card_view="http://schemas.android.com/apk/res-auto"
+                        android:id="@+id/card_view2"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        card_view:cardCornerRadius="4dp"
+                        android:layout_alignParentLeft="true"
+                        android:layout_alignParentTop="true"
+                        android:gravity="center"
+                        android:layout_gravity="center"
+                        android:layout_weight="1"
+                        android:background="#797979">
+
+                        <ImageButton
+                            android:background="@drawable/poke"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:text="New Button"
+                            android:id="@+id/button2"
+                            android:layout_gravity="right|top" />
+
+                    </android.support.v7.widget.CardView>
+
+                    <android.support.v7.widget.CardView
+                        xmlns:card_view="http://schemas.android.com/apk/res-auto"
+                        android:id="@+id/card_view3"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        card_view:cardCornerRadius="4dp"
+                        android:layout_alignParentLeft="true"
+                        android:layout_alignParentTop="true"
+                        android:gravity="center"
+                        android:layout_gravity="center"
+                        android:layout_weight="1"
+                        android:background="#797979">
+
+                        <ImageButton
+                            android:background="@drawable/poke"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:text="New Button"
+                            android:id="@+id/button3"
+                            android:layout_gravity="right|top" />
+
+                    </android.support.v7.widget.CardView>
+
+                    <android.support.v7.widget.CardView
+                        xmlns:card_view="http://schemas.android.com/apk/res-auto"
+                        android:id="@+id/card_view4"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        card_view:cardCornerRadius="4dp"
+                        android:layout_alignParentLeft="true"
+                        android:layout_alignParentTop="true"
+                        android:gravity="center"
+                        android:layout_gravity="center"
+                        android:layout_weight="1"
+                        android:background="#797979">
+
+                        <ImageButton
+                            android:background="@drawable/poke"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:text="New Button"
+                            android:id="@+id/button4"
+                            android:layout_gravity="right|top" />
+
+                    </android.support.v7.widget.CardView>
+                </LinearLayout>
+
+                <LinearLayout
+                    android:orientation="horizontal"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:layout_weight="1">
+
+                    <android.support.v7.widget.CardView
+                        xmlns:card_view="http://schemas.android.com/apk/res-auto"
+                        android:id="@+id/card_view5"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        card_view:cardCornerRadius="4dp"
+                        android:layout_alignParentLeft="true"
+                        android:layout_alignParentTop="true"
+                        android:gravity="center"
+                        android:layout_gravity="center"
+                        android:layout_weight="1"
+                        android:background="#797979">
+
+                        <ImageButton
+                            android:background="@drawable/poke"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:text="New Button"
+                            android:id="@+id/button5"
+                            android:layout_gravity="right|top" />
+
+                    </android.support.v7.widget.CardView>
+
+                    <android.support.v7.widget.CardView
+                        xmlns:card_view="http://schemas.android.com/apk/res-auto"
+                        android:id="@+id/card_view6"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        card_view:cardCornerRadius="4dp"
+                        android:layout_alignParentLeft="true"
+                        android:layout_alignParentTop="true"
+                        android:gravity="center"
+                        android:layout_gravity="center"
+                        android:layout_weight="1"
+                        android:background="#797979">
+
+                        <ImageButton
+                            android:background="@drawable/poke"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:text="New Button"
+                            android:id="@+id/button6"
+                            android:layout_gravity="right|top" />
+
+                    </android.support.v7.widget.CardView>
+
+                    <android.support.v7.widget.CardView
+                        xmlns:card_view="http://schemas.android.com/apk/res-auto"
+                        android:id="@+id/card_view7"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        card_view:cardCornerRadius="4dp"
+                        android:layout_alignParentLeft="true"
+                        android:layout_alignParentTop="true"
+                        android:gravity="center"
+                        android:layout_gravity="center"
+                        android:layout_weight="1"
+                        android:background="#797979">
+
+                        <ImageButton
+                            android:background="@drawable/poke"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:text="New Button"
+                            android:id="@+id/button7"
+                            android:layout_gravity="right|top" />
+
+                    </android.support.v7.widget.CardView>
+
+                    <android.support.v7.widget.CardView
+                        xmlns:card_view="http://schemas.android.com/apk/res-auto"
+                        android:id="@+id/card_view8"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        card_view:cardCornerRadius="4dp"
+                        android:layout_alignParentLeft="true"
+                        android:layout_alignParentTop="true"
+                        android:gravity="center"
+                        android:layout_gravity="center"
+                        android:layout_weight="1"
+                        android:background="#797979">
+
+                        <ImageButton
+                            android:background="@drawable/poke"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:text="New Button"
+                            android:id="@+id/button8"
+                            android:layout_gravity="right|top" />
+
+                    </android.support.v7.widget.CardView>
+                </LinearLayout>
+                <LinearLayout
+                    android:orientation="horizontal"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:layout_weight="1">
+
+                    <android.support.v7.widget.CardView
+                        xmlns:card_view="http://schemas.android.com/apk/res-auto"
+                        android:id="@+id/card_view9"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        card_view:cardCornerRadius="4dp"
+                        android:layout_alignParentLeft="true"
+                        android:layout_alignParentTop="true"
+                        android:gravity="center"
+                        android:layout_gravity="center"
+                        android:layout_weight="1"
+                        android:background="#797979">
+
+                        <ImageButton
+                            android:background="@drawable/poke"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:text="New Button"
+                            android:id="@+id/button9"
+                            android:layout_gravity="right|top" />
+
+                    </android.support.v7.widget.CardView>
+
+                    <android.support.v7.widget.CardView
+                        xmlns:card_view="http://schemas.android.com/apk/res-auto"
+                        android:id="@+id/card_view10"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        card_view:cardCornerRadius="4dp"
+                        android:layout_alignParentLeft="true"
+                        android:layout_alignParentTop="true"
+                        android:gravity="center"
+                        android:layout_gravity="center"
+                        android:layout_weight="1"
+                        android:background="#797979">
+
+                        <ImageButton
+                            android:background="@drawable/poke"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:text="New Button"
+                            android:id="@+id/button10"
+                            android:layout_gravity="right|top" />
+
+                    </android.support.v7.widget.CardView>
+
+                    <android.support.v7.widget.CardView
+                        xmlns:card_view="http://schemas.android.com/apk/res-auto"
+                        android:id="@+id/card_view11"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        card_view:cardCornerRadius="4dp"
+                        android:layout_alignParentLeft="true"
+                        android:layout_alignParentTop="true"
+                        android:gravity="center"
+                        android:layout_gravity="center"
+                        android:layout_weight="1"
+                        android:background="#797979">
+
+                        <ImageButton
+                            android:background="@drawable/poke"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:text="New Button"
+                            android:id="@+id/button11"
+                            android:layout_gravity="right|top" />
+
+                    </android.support.v7.widget.CardView>
+
+                    <android.support.v7.widget.CardView
+                        xmlns:card_view="http://schemas.android.com/apk/res-auto"
+                        android:id="@+id/card_view12"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        card_view:cardCornerRadius="4dp"
+                        android:layout_alignParentLeft="true"
+                        android:layout_alignParentTop="true"
+                        android:gravity="center"
+                        android:layout_gravity="center"
+                        android:layout_weight="1"
+                        android:background="#797979">
+
+                        <ImageButton
+                            android:background="@drawable/poke"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:text="New Button"
+                            android:id="@+id/button12"
+                            android:layout_gravity="right|top" />
+
+                    </android.support.v7.widget.CardView>
+                </LinearLayout>
+                <LinearLayout
+                    android:orientation="horizontal"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:layout_weight="1">
+
+                    <android.support.v7.widget.CardView
+                        xmlns:card_view="http://schemas.android.com/apk/res-auto"
+                        android:id="@+id/card_view13"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        card_view:cardCornerRadius="4dp"
+                        android:layout_alignParentLeft="true"
+                        android:layout_alignParentTop="true"
+                        android:gravity="center"
+                        android:layout_gravity="center"
+                        android:layout_weight="1"
+                        android:background="#797979">
+
+                        <ImageButton
+                            android:background="@drawable/poke"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:text="New Button"
+                            android:id="@+id/button13"
+                            android:layout_gravity="right|top" />
+
+                    </android.support.v7.widget.CardView>
+
+                    <android.support.v7.widget.CardView
+                        xmlns:card_view="http://schemas.android.com/apk/res-auto"
+                        android:id="@+id/card_view14"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        card_view:cardCornerRadius="4dp"
+                        android:layout_alignParentLeft="true"
+                        android:layout_alignParentTop="true"
+                        android:gravity="center"
+                        android:layout_gravity="center"
+                        android:layout_weight="1"
+                        android:background="#797979">
+
+                        <ImageButton
+                            android:background="@drawable/poke"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:text="New Button"
+                            android:id="@+id/button14"
+                            android:layout_gravity="right|top" />
+
+                    </android.support.v7.widget.CardView>
+
+                    <android.support.v7.widget.CardView
+                        xmlns:card_view="http://schemas.android.com/apk/res-auto"
+                        android:id="@+id/card_view15"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        card_view:cardCornerRadius="4dp"
+                        android:layout_alignParentLeft="true"
+                        android:layout_alignParentTop="true"
+                        android:gravity="center"
+                        android:layout_gravity="center"
+                        android:layout_weight="1"
+                        android:background="#797979">
+
+                        <ImageButton
+                            android:background="@drawable/poke"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:text="New Button"
+                            android:id="@+id/button15"
+                            android:layout_gravity="right|top" />
+
+                    </android.support.v7.widget.CardView>
+
+                    <android.support.v7.widget.CardView
+                        xmlns:card_view="http://schemas.android.com/apk/res-auto"
+                        android:id="@+id/card_view16"
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        card_view:cardCornerRadius="4dp"
+                        android:layout_alignParentLeft="true"
+                        android:layout_alignParentTop="true"
+                        android:gravity="center"
+                        android:layout_gravity="center"
+                        android:layout_weight="1"
+                        android:background="#797979">
+
+                        <ImageButton
+                            android:background="@drawable/poke"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:text="New Button"
+                            android:id="@+id/button16"
+                            android:layout_gravity="right|top" />
+
+                    </android.support.v7.widget.CardView>
+                </LinearLayout>
+            </LinearLayout>
+
+        </LinearLayout>
+
+    </RelativeLayout>
+
+
+</FrameLayout>
Index: ../Git final/Proyectofinal/app/src/main/res/layout/activity_in_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout/activity_in_menu.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout/activity_in_menu.xml	(revision )
@@ -0,0 +1,54 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/frameLayout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.example.polpincho.proyectofinal.InMenu">
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:minHeight="?attr/actionBarSize"
+        android:background="@color/colorPrimary"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+    </android.support.v7.widget.Toolbar>
+
+    <LinearLayout
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_gravity="center"
+        android:layout_margin="100dp"
+        android:layout_marginTop="150dp">
+
+        <Button
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:text="calculator"
+            android:id="@+id/clc"
+            android:layout_weight="1" />
+
+        <Button
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:text="Play"
+            android:id="@+id/rnk"
+            android:layout_weight="1" />
+
+        <Button
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:text="profile"
+            android:id="@+id/prof"
+            android:layout_weight="1" />
+
+        <Button
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:text="Media player"
+            android:id="@+id/med"
+            android:layout_weight="1" />
+    </LinearLayout>
+
+</FrameLayout>
Index: ../Git final/Proyectofinal/app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/build.gradle	(revision )
+++ ../Git final/Proyectofinal/app/build.gradle	(revision )
@@ -0,0 +1,33 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 23
+    buildToolsVersion "23.0.2"
+
+    defaultConfig {
+        applicationId "com.example.polpincho.proyectofinal"
+        minSdkVersion 18
+        targetSdkVersion 23
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+dependencies {
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+    testCompile 'junit:junit:4.12'
+
+    compile 'com.android.support:appcompat-v7:23.1.1'
+    compile 'com.android.support:design:23.1.1'
+    compile 'com.android.support:support-v4:23.1.1'
+    compile 'com.android.support:cardview-v7:23.1.1'
+
+    compile 'com.jakewharton:butterknife:7.0.1'
+}
+
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/InMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/InMenu.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/InMenu.java	(revision )
@@ -0,0 +1,109 @@
+package com.example.polpincho.proyectofinal;
+
+import android.content.Context;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.media.MediaPlayer;
+import android.net.Uri;
+import android.os.AsyncTask;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v7.app.AppCompatActivity;
+
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+
+import android.os.Bundle;
+
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.Button;
+
+import com.example.polpincho.proyectofinal.persistencia.BDUser;
+
+public class InMenu extends AppCompatActivity implements View.OnClickListener {
+
+    private Button clc;
+    private Button mpl;
+    private Button pro;
+    private Button rnk;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_in_menu);
+
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+        setTitle("Main menu");
+        //Creamos el primer fragment, y no le pasamos argumentos!
+        clc = (Button) findViewById(R.id.clc);
+        rnk = (Button) findViewById(R.id.rnk);
+        mpl = (Button) findViewById(R.id.med);
+        pro = (Button) findViewById(R.id.prof);
+
+        clc.setOnClickListener(this);
+        rnk.setOnClickListener(this);
+        mpl.setOnClickListener(this);
+        pro.setOnClickListener(this);
+
+    }
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        getMenuInflater().inflate(R.menu.menu_in_menu, menu);
+        return true;
+    }
+
+    public boolean onOptionsItemSelected(MenuItem item) {
+        // Handle item selection
+        switch (item.getItemId()) {
+            case R.id.MenuLogOut:
+                SharedPreferences settings = getApplicationContext().getSharedPreferences("MEMORYAPK", Context.MODE_PRIVATE);
+                SharedPreferences.Editor editor = settings.edit();
+                editor.putBoolean("SessionActiva", false);
+                editor.apply();
+                Intent i = new Intent(getApplicationContext(), Login.class);
+                startActivity(i);
+                finish();
+                return true;
+            default:
+                return super.onOptionsItemSelected(item);
+        }
+    }
+
+
+    @Override
+    public void onClick(View v) {
+        FragmentManager fragmentManager = getSupportFragmentManager();
+        FragmentTransaction fragmentTransaction =
+                fragmentManager.beginTransaction();
+        //Reemplazamos el Frame Layout de la Activity por el nuevo fragment.
+        //El Frame Layout es el contenedor
+
+        switch (v.getId()) {
+            case R.id.clc:
+                Intent i = new Intent(getApplicationContext(), Calculator.class);
+                startActivity(i);
+                break;
+            case R.id.rnk:
+                i = new Intent(getApplicationContext(), PagerHolder.class);
+                startActivity(i);
+                break;
+            case R.id.med:
+                i = new Intent(getApplicationContext(), Reproductor.class);
+                startActivity(i);
+                break;
+            case R.id.prof:
+
+                i = new Intent(getApplicationContext(), Perfil.class);
+                startActivity(i);
+
+                break;
+        }
+    }
+}
+
+
Index: ../Git final/Proyectofinal/app/src/main/res/layout/fragment_pager_adapter.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout/fragment_pager_adapter.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout/fragment_pager_adapter.xml	(revision )
@@ -0,0 +1,7 @@
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
+    android:layout_height="match_parent" tools:context="joandev.com.pagerexample.PagerAdapter">
+
+    <!-- TODO: Update blank fragment layout -->
+
+</FrameLayout>
Index: ../Git final/Proyectofinal/.idea/copyright/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/.idea/copyright/profiles_settings.xml	(revision )
+++ ../Git final/Proyectofinal/.idea/copyright/profiles_settings.xml	(revision )
@@ -0,0 +1,3 @@
+<component name="CopyrightManager">
+  <settings default="" />
+</component>
\ No newline at end of file
Index: ../Git final/Proyectofinal/gradlew.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/gradlew.bat	(revision )
+++ ../Git final/Proyectofinal/gradlew.bat	(revision )
@@ -0,0 +1,90 @@
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windowz variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
Index: ../Git final/Proyectofinal/app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/values/strings.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/values/strings.xml	(revision )
@@ -0,0 +1,10 @@
+<resources>
+    <string name="app_name">Proyecto final</string>
+    <string name="title_activity_in_menu">InMenu</string>
+    <string name="action_settings">Settings</string>
+    <string name="section_format">Hello World from section: %1$d</string>
+
+    <!-- TODO: Remove or change this placeholder text -->
+    <string name="hello_blank_fragment">Hello blank fragment</string>
+    <string name="title_activity_ranking">Ranking</string>
+</resources>
Index: ../Git final/Proyectofinal/app/src/main/res/layout/fragment_bad_log.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout/fragment_bad_log.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout/fragment_bad_log.xml	(revision )
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:weightSum="2">
+
+    <ImageView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/imageView"
+        android:layout_weight="0.8" />
+
+    <LinearLayout
+        android:orientation="horizontal"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_weight="1.2"
+        android:layout_gravity="center">
+
+        <Button
+            android:layout_width="match_parent"
+            android:layout_height="98dp"
+            android:text="try again"
+            android:id="@+id/nextButton"
+            android:textSize="30dp"
+            android:layout_gravity="center" />
+    </LinearLayout>
+
+</LinearLayout>
Index: ../Git final/Proyectofinal/app/src/main/res/layout/fragment_edit_perfil.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout/fragment_edit_perfil.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout/fragment_edit_perfil.xml	(revision )
@@ -0,0 +1,119 @@
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.example.polpincho.proyectofinal.EditPerfil">
+
+    <LinearLayout
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center">
+
+        <ImageView
+            android:layout_width="150dp"
+            android:layout_height="150dp"
+            android:id="@+id/EditIcon"
+            android:src="@drawable/default_user" />
+
+        <LinearLayout
+            android:orientation="horizontal"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:gravity="center_horizontal"
+            android:layout_marginLeft="50dp"
+            android:layout_marginRight="50dp" >
+
+            <Button
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Select Icon"
+                android:id="@+id/EditSelectNewIcon" />
+
+            <Button
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Delete Icon"
+                android:id="@+id/EditDeleteIcon" />
+        </LinearLayout>
+
+        <EditText
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:inputType="textEmailAddress"
+            android:ems="10"
+            android:id="@+id/EditMail"
+            android:hint="New E-mail" />
+
+        <EditText
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:inputType="textPassword"
+            android:ems="10"
+            android:id="@+id/EditNewPassword"
+            android:hint="New password" />
+
+        <EditText
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:inputType="textPassword"
+            android:ems="10"
+            android:id="@+id/EditNewPasswordConf"
+            android:hint="Confirm new password" />
+
+        <CheckBox
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Fast Login"
+            android:id="@+id/EditKeepSes"
+            android:checked="false" />
+
+        <LinearLayout
+            android:orientation="horizontal"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:gravity="center_horizontal"
+            android:layout_marginLeft="50dp"
+            android:layout_marginRight="50dp">
+
+            <Button
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="SAVE"
+                android:id="@+id/EditSaveButton"
+                android:layout_weight="1" />
+
+            <Button
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="Back"
+                android:id="@+id/EditBackButton"
+                android:layout_weight="1" />
+        </LinearLayout>
+
+        <LinearLayout
+            android:orientation="horizontal"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:gravity="center_horizontal"
+            android:layout_marginLeft="50dp"
+            android:layout_marginRight="50dp" >
+
+            <Button
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="Loggout"
+                android:id="@+id/EditLoggout"
+                android:layout_weight="1" />
+
+            <Button
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="Restart"
+                android:id="@+id/EditRestPunt"
+                android:layout_weight="1" />
+        </LinearLayout>
+
+    </LinearLayout>
+
+</FrameLayout>
Index: ../Git final/Proyectofinal/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/.gitignore	(revision )
+++ ../Git final/Proyectofinal/.gitignore	(revision )
@@ -0,0 +1,8 @@
+*.iml
+.gradle
+/local.properties
+/.idea/workspace.xml
+/.idea/libraries
+.DS_Store
+/build
+/captures
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/ViewPerfil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/ViewPerfil.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/ViewPerfil.java	(revision )
@@ -0,0 +1,241 @@
+package com.example.polpincho.proyectofinal;
+
+import android.content.Context;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.database.Cursor;
+import android.location.Address;
+import android.location.Geocoder;
+import android.location.GpsStatus;
+import android.location.Location;
+import android.location.LocationListener;
+import android.location.LocationManager;
+import android.net.Uri;
+import android.os.Bundle;
+import android.provider.MediaStore;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import com.example.polpincho.proyectofinal.persistencia.BDUser;
+
+import java.io.IOException;
+import java.util.List;
+
+
+public class ViewPerfil extends Fragment implements View.OnClickListener{
+
+    private OnFragmentInteractionListener mListener;
+    Button viewback, viewedit,viewlogout;
+    TextView viewuser, viewmail, viewscore;
+    ImageView viewicon;
+    List<Address> l;
+    LocationManager lm;
+    LocationListener lis;
+    View rootView;
+
+    public ViewPerfil() {
+        // Required empty public constructor
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+    }
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+
+        rootView = inflater.inflate(R.layout.fragment_view_perfil, container, false);
+        viewuser = (TextView) rootView.findViewById(R.id.ViewUsername);
+        viewmail = (TextView) rootView.findViewById(R.id.ViewEmail);
+        viewscore = (TextView) rootView.findViewById(R.id.ViewBestScore);
+        viewicon = (ImageView) rootView.findViewById(R.id.ViewIcon);
+
+
+        viewback = (Button) rootView.findViewById(R.id.ViewBackButton);
+        viewback.setOnClickListener(this);
+        viewedit = (Button) rootView.findViewById(R.id.ViewEditButton);
+        viewedit.setOnClickListener(this);
+        viewlogout = (Button) rootView.findViewById(R.id.ViewLogOut);
+        viewlogout.setOnClickListener(this);
+
+        setHasOptionsMenu(true);
+
+        //Instanciamos el SharedPreferences
+        SharedPreferences settings = getActivity().getSharedPreferences("MEMORYAPK", Context.MODE_PRIVATE);
+        //Consultamos
+        String useractivo = settings.getString("UserActivo", "Guest");
+        viewuser.setText(useractivo);
+        BDUser bdUser = new BDUser(getContext());
+        Cursor c = bdUser.getUser(useractivo);
+        if (c.moveToFirst()) {
+            viewscore.setText(""+c.getInt(c.getColumnIndex("bstpunt")));
+            viewmail.setText(""+c.getString(c.getColumnIndex("mail")));
+            viewmail.setText("" + c.getString(c.getColumnIndex("mail")));
+            String uri = c.getString(c.getColumnIndex("uri"));
+            Log.e("uri",""+uri);
+            if (uri != null) {
+                Uri imageway = Uri.parse(uri);
+                try {
+                    viewicon.setImageBitmap(MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), imageway));
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+            }
+        }
+        c.close();
+        bdUser.close();
+        return rootView;
+    }
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (context instanceof OnFragmentInteractionListener) {
+            mListener = (OnFragmentInteractionListener) context;
+        } else {
+            throw new RuntimeException(context.toString()
+                    + " must implement OnFragmentInteractionListener");
+        }
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+    }
+
+    @Override
+    public void onPause() {
+        //lm.removeGpsStatusListener((GpsStatus.Listener) lis);
+        if (lis!= null) lm.removeUpdates(lis);
+        super.onPause();
+    }
+
+    //Importante! Aquí no se puede usar el método del "onClick" en xml
+    // por que referencia a la Activity y no al fragment!!
+    @Override
+    public void onClick(View v) {
+        switch (v.getId()){
+            case R.id.ViewEditButton:
+                if (mListener != null) {
+                    //En este caso, si no hay nada escrito en el EditText,
+                    //pondremos el String vació ""
+                    mListener.onFragmentInteraction("",2);
+                }else {
+                    Log.v("Fragment1", "No listener attached");
+                }
+                break;
+            case R.id.ViewBackButton:
+                Intent i = new Intent(getContext(),InMenu.class);
+                startActivity(i);
+                break;
+            case R.id.ViewLogOut:
+                SharedPreferences settings = getContext().getSharedPreferences("MEMORYAPK", Context.MODE_PRIVATE);
+                SharedPreferences.Editor editor = settings.edit();
+                editor.putBoolean("SessionActiva", false);
+                editor.apply();
+                i = new Intent(getContext(), Login.class);
+                startActivity(i);
+                if (mListener != null) {
+                    mListener.onFragmentInteraction("end",4);
+                }else {
+                    Log.v("Fragment1", "No listener attached");
+                }
+                break;
+            default:
+        }
+    }
+
+    @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        inflater.inflate(R.menu.menu_perfil_view, menu);
+        super.onCreateOptionsMenu(menu, inflater);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()) {
+            case R.id.PerfilViewGps:
+                l = null;
+                lm = (LocationManager) getActivity()
+                        .getSystemService(Context.LOCATION_SERVICE);
+                lis = new LocationListener() {
+
+                    @Override
+                    public void onStatusChanged(String provider, int status,
+                                                Bundle extras) {
+                    }
+
+                    @Override
+                    public void onProviderEnabled(String provider) {
+                    }
+
+                    @Override
+                    public void onProviderDisabled(String provider) {
+                    }
+
+                    @Override
+                    public void onLocationChanged(Location location) {
+                        Geocoder gc = new Geocoder(getContext());
+                        try {
+                            l = gc.getFromLocation(location.getLatitude(),
+                                    location.getLongitude(), 5);
+                        } catch (IOException e) {
+                            e.printStackTrace();
+                        }
+
+                        Log.e("GPS", ""+location.getLatitude()+ " " +location.getLongitude());
+                        for (int i = 0; i < l.size(); ++i) {
+                            Log.v("LOG", l.get(i).getAddressLine(0).toString());
+                            TextView t = (TextView) rootView.findViewById(R.id.GPS1);
+                            if (i == 0) t.setText("");
+                            t.setText(t.getText() + "\n" + l.get(i).getAddressLine(0).toString());
+                        }
+
+                    }
+                };
+
+
+                if (lm.isProviderEnabled(lm.GPS_PROVIDER)) {
+                    try{
+                        lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, lis);
+                    }
+                    catch (Exception e) {
+                    }
+                    Log.e("GPS", "Satelite");
+                }
+                if (lm.isProviderEnabled(lm.NETWORK_PROVIDER)) {
+                    try{
+                        lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, lis);
+                    }
+                    catch (Exception e) {
+                    }
+                    Log.e("GPS", "Network");
+                }
+                return true;
+            case R.id.PerfilViewExit:
+                SharedPreferences settings = getContext().getSharedPreferences("MEMORYAPK", Context.MODE_PRIVATE);
+                SharedPreferences.Editor editor = settings.edit();
+                editor.putBoolean("SessionActiva", false);
+                editor.apply();
+                if (mListener != null) {
+                    mListener.onFragmentInteraction("end", 5);
+                }else {
+                    Log.v("Fragment1", "No listener attached");
+                }
+                return true;
+        }
+        return super.onOptionsItemSelected(item);
+    }
+
+}
+
Index: ../Git final/Proyectofinal/app/fabric.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- ../Git final/Proyectofinal/app/fabric.properties	(revision )
+++ ../Git final/Proyectofinal/app/fabric.properties	(revision )
@@ -0,0 +1,4 @@
+#Contains API Secret used to validate your application. Commit to internal source control; avoid making secret public.
+#Fri Feb 05 17:49:56 CET 2016
+apiSecret=aab03ee5d4f5b03a82e5d8d83cf71409cad51b907a8cd93cfecf4e0572bba124
+twitterPluginId=56b4cb73715ca58d8800000f
Index: ../Git final/Proyectofinal/app/src/main/res/values-w820dp/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/values-w820dp/dimens.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/values-w820dp/dimens.xml	(revision )
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
Index: ../Git final/Proyectofinal/app/src/main/res/layout/fragment_ranking.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout/fragment_ranking.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout/fragment_ranking.xml	(revision )
@@ -0,0 +1,14 @@
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.example.polpincho.proyectofinal.Ranking">
+
+    <android.support.v7.widget.RecyclerView
+        android:layout_width="match_parent"
+        android:layout_height="501dp"
+        android:scrollbars="vertical"
+        android:id="@+id/mRecyclerView" android:layout_gravity="bottom|center_horizontal"
+        tools:listitem="@android:layout/simple_list_item_1" />
+
+</FrameLayout>
Index: ../Git final/Proyectofinal/app/src/main/res/values-v21/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/values-v21/styles.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/values-v21/styles.xml	(revision )
@@ -0,0 +1,2 @@
+<resources>>
+</resources>
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Ranking.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Ranking.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Ranking.java	(revision )
@@ -0,0 +1,208 @@
+package com.example.polpincho.proyectofinal;
+
+import android.app.AlertDialog;
+import android.content.ContentResolver;
+import android.content.ContentValues;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.content.res.Resources;
+import android.database.Cursor;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.TextView;
+import android.content.Context;
+import android.net.Uri;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.example.polpincho.proyectofinal.persistencia.BDUser;
+
+import java.util.ArrayList;
+
+public class Ranking extends Fragment implements View.OnClickListener{
+
+    private RecyclerView mRecyclerView;
+    private LinearLayoutManager mLinearLayout;
+
+    private OnFragmentInteractionListener mListener;
+
+    public Ranking() {
+        // Required empty public constructor
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        // Inflate the layout for this fragment
+        View rootView = inflater.inflate(R.layout.fragment_ranking, container, false);
+        //findViewById del layout activity_main
+        mRecyclerView = (RecyclerView) rootView.findViewById(R.id.mRecyclerView);
+
+        //LinearLayoutManager necesita el contexto de la Activity.
+        //El LayoutManager se encarga de posicionar los items dentro del recyclerview
+        //Y de definir la politica de reciclaje de los items no visibles.
+        mLinearLayout = new LinearLayoutManager(rootView.getContext());
+
+        //Asignamos el LinearLayoutManager al recycler:
+        mRecyclerView.setLayoutManager(mLinearLayout);
+
+        setHasOptionsMenu(true);
+
+        BDUser bduser = new BDUser(getContext());
+        Cursor cursor = bduser.getAllUsersPunt();
+        ArrayList<User> data = new ArrayList<User>();
+        if (cursor.moveToFirst()) {
+            do {
+                String user = cursor.getString(cursor.getColumnIndex("username"));
+                String mail =cursor.getString(cursor.getColumnIndex("mail"));
+                int punt = cursor.getInt(cursor.getColumnIndex("bstpunt"));
+                String uri = cursor.getString(cursor.getColumnIndex("uri"));
+                User u = new User(user,mail, uri, punt);
+                Log.wtf("Update", cursor.getInt(cursor.getColumnIndex("bstpunt")) + " " + cursor.getColumnIndex("bstpunt"));
+                data.add(u);
+            } while (cursor.moveToNext());
+        }
+        bduser.close();
+        mRecyclerView.setAdapter(new CustomAdapter(data));
+
+        if (mListener != null) {
+            mListener.onFragmentInteraction(getTag(),2);
+        }else {
+            Log.v("ranking", "No listener attached");
+        }
+
+        return rootView;
+    }
+    @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        inflater.inflate(R.menu.menu_pager_holder, menu);
+        super.onCreateOptionsMenu(menu, inflater);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()) {
+            case R.id.HolderRestart:
+                AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
+                builder.setTitle("Resetear puntuaciones");
+                builder.setMessage("Estas seguro que quieres borrar Todos los registros?");
+                builder.setPositiveButton("Ok",
+                        new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                if (mListener != null) {
+                                    BDUser bdUser = new BDUser(getContext());
+                                    boolean aux = bdUser.ResetPoints();
+                                    bdUser.close();
+                                    mListener.onFragmentInteraction(getTag(), 5);
+                                } else {
+                                    Log.v("Fragment1", "No listener attached");
+                                }
+                            }
+                        });
+                builder.setNegativeButton("Cancel",
+                        new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                            }
+                        });
+                AlertDialog dialog = builder.create();
+                dialog.show();
+                return true;
+            case R.id.HolderLogOut:
+                SharedPreferences settings = getContext().getSharedPreferences("MEMORYAPK", Context.MODE_PRIVATE);
+                SharedPreferences.Editor editor = settings.edit();
+                editor.putBoolean("SessionActiva", false);
+                editor.apply();
+                Intent i = new Intent(getContext(), Login.class);
+                startActivity(i);
+                if (mListener != null) {
+                    mListener.onFragmentInteraction("end",4);
+                }else {
+                    Log.v("Fragment1", "No listener attached");
+                }
+                return true;
+        }
+        return super.onOptionsItemSelected(item);
+    }
+
+
+    private class BDHelper extends AsyncTask<Integer, Integer, String> {
+
+        @Override
+        protected void onPreExecute() {
+            super.onPreExecute();
+        }
+
+        @Override
+        protected void onPostExecute(String s) {
+
+            super.onPostExecute(s);
+        }
+
+        @Override
+        protected String doInBackground(Integer... params) {
+            BDUser bdUser = new BDUser(getContext());
+            ContentValues values = new ContentValues();
+            boolean aux = bdUser.ResetPoints();
+            bdUser.close();
+            return null;
+        }
+
+        @Override
+        protected void onCancelled() {
+            super.onCancelled();
+        }
+    }
+
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (context instanceof OnFragmentInteractionListener) {
+            mListener = (OnFragmentInteractionListener) context;
+        } else {
+            throw new RuntimeException(context.toString()
+                    + " must implement OnFragmentInteractionListener");
+        }
+    }
+
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+        mListener = null;
+    }
+
+
+    @Override
+    public void onClick(View v) {
+
+    }
+}
Index: ../Git final/Proyectofinal/app/src/main/res/layout/activity_calculator.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout/activity_calculator.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout/activity_calculator.xml	(revision )
@@ -0,0 +1,246 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.example.polpincho.proyectofinal.Calculator"
+    android:id="@+id/calculframe">
+
+
+    <LinearLayout
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:minHeight="?attr/actionBarSize"
+            android:background="@color/colorPrimary"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+        </android.support.v7.widget.Toolbar>
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:id="@+id/visor"
+            android:maxLength="11"
+            android:gravity="center|right"
+            android:textSize="40dp"
+            android:layout_weight="100"
+            android:text="0" />
+
+        <TableLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_weight="30">
+
+            <TableRow
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:layout_weight="1" >
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="CE"
+                    android:id="@+id/borrar"
+                    android:layout_weight="1"
+                    android:textSize="20dp"
+                    android:gravity="center" />
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="ANS"
+                    android:id="@+id/ans"
+                    android:layout_column="1"
+                    android:layout_weight="1"
+                    android:textSize="20dp"
+                    android:textStyle="italic" />
+
+            </TableRow>
+
+            <TableRow
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:layout_weight="1">
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="7"
+                    android:id="@+id/button7"
+                    android:layout_column="0"
+                    android:layout_weight="1"
+                    android:textSize="30dp"
+                    android:textStyle="italic" />
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="8"
+                    android:id="@+id/button8"
+                    android:layout_column="1"
+                    android:layout_weight="1"
+                    android:textSize="30dp"
+                    android:textStyle="italic" />
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="9"
+                    android:id="@+id/button9"
+                    android:layout_column="2"
+                    android:layout_weight="1"
+                    android:textSize="30dp"
+                    android:textStyle="italic" />
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="+"
+                    android:id="@+id/sum"
+                    android:layout_column="3"
+                    android:layout_weight="1"
+                    android:textSize="30dp" />
+
+            </TableRow>
+
+            <TableRow
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:layout_weight="1">
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="4"
+                    android:id="@+id/button4"
+                    android:layout_column="0"
+                    android:layout_weight="1"
+                    android:textSize="30dp"
+                    android:textStyle="italic" />
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="5"
+                    android:id="@+id/button5"
+                    android:layout_column="1"
+                    android:layout_weight="1"
+                    android:textSize="30dp"
+                    android:textStyle="italic" />
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="6"
+                    android:id="@+id/button6"
+                    android:layout_column="2"
+                    android:layout_weight="1"
+                    android:textSize="30dp"
+                    android:textStyle="italic" />
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="-"
+                    android:id="@+id/minus"
+                    android:layout_column="3"
+                    android:layout_weight="1"
+                    android:textSize="30dp" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:layout_weight="1">
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="1"
+                    android:id="@+id/button1"
+                    android:layout_column="0"
+                    android:layout_weight="1"
+                    android:textSize="30dp"
+                    android:textStyle="italic" />
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="2"
+                    android:id="@+id/button2"
+                    android:layout_column="1"
+                    android:layout_weight="1"
+                    android:textSize="30dp"
+                    android:textStyle="italic" />
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="3"
+                    android:id="@+id/button3"
+                    android:layout_column="2"
+                    android:layout_weight="1"
+                    android:textSize="30dp"
+                    android:textStyle="italic" />
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="X"
+                    android:id="@+id/multi"
+                    android:layout_column="3"
+                    android:layout_weight="1"
+                    android:textSize="30dp" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:layout_weight="1">
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="."
+                    android:id="@+id/dot"
+                    android:layout_column="0"
+                    android:layout_weight="1"
+                    android:textSize="30dp" />
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="0"
+                    android:id="@+id/button0"
+                    android:layout_column="1"
+                    android:layout_weight="1"
+                    android:textSize="30dp"
+                    android:textStyle="italic" />
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="="
+                    android:id="@+id/equal"
+                    android:layout_column="2"
+                    android:layout_weight="1"
+                    android:textSize="30dp"
+                    android:onClick="equalpress" />
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:text="/"
+                    android:id="@+id/divide"
+                    android:layout_column="3"
+                    android:layout_weight="1"
+                    android:textSize="30dp" />
+            </TableRow>
+        </TableLayout>
+
+    </LinearLayout>
+
+</RelativeLayout>
Index: ../Git final/Proyectofinal/app/src/main/res/layout/rank.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout/rank.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout/rank.xml	(revision )
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="horizontal" android:layout_width="match_parent"
+    android:layout_height="match_parent" >
+
+    <ImageView
+        android:layout_width="50dp"
+        android:layout_height="50dp"
+        android:id="@+id/iconrank"
+        android:scaleType="centerCrop"
+        android:adjustViewBounds="true"
+        style="1"
+        android:src="@drawable/default_user" />
+
+    <TextView
+        android:id="@+id/username"
+        android:layout_width="match_parent"
+        android:layout_height="50dp"
+        android:text="PRRRR2"
+        android:layout_gravity="center_horizontal"
+        android:gravity="center"
+        android:textColor="#ffffffff"
+        style="1"
+        android:layout_weight="1" />
+    <TextView
+        android:id="@+id/mail"
+        android:layout_width="match_parent"
+        android:layout_height="50dp"
+        android:text="PRRRRR"
+        android:layout_gravity="center_horizontal"
+        android:gravity="center"
+        android:textColor="#ffffffff"
+        style="1"
+        android:layout_weight="1" />
+
+    <TextView
+        android:id="@+id/punt"
+        android:layout_width="match_parent"
+        android:layout_height="50dp"
+        android:text="PRRRRR"
+        android:layout_gravity="center_horizontal"
+        android:gravity="center"
+        android:textColor="#ffffff"
+        style="1"
+        android:layout_weight="1" />
+
+</LinearLayout>
\ No newline at end of file
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Login.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Login.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Login.java	(revision )
@@ -0,0 +1,74 @@
+package com.example.polpincho.proyectofinal;
+
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+
+public class Login extends AppCompatActivity implements OnFragmentInteractionListener{
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_login);
+
+        //Creamos el primer fragment, y no le pasamos argumentos!
+        setTitle("Fragment 1");
+        FragmentManager fragmentManager = getSupportFragmentManager();
+        FragmentTransaction fragmentTransaction =
+                fragmentManager.beginTransaction();
+        //Reemplazamos el Frame Layout de la Activity por el nuevo fragment.
+        //El Frame Layout es el contenedor
+        fragmentTransaction.replace(R.id.frameLayout, new IniFragment());
+        fragmentTransaction.commit();
+    }
+
+
+    @Override
+    public void onFragmentInteraction(String text, Integer from) {
+
+        Fragment f = null;
+
+        if (from == 2 ) {
+            //from 4: sign up
+            f = new SignFragment();
+            setTitle("Sign Up");
+        }
+        else {
+            if (from == 1) {
+                //from 1: log in
+                f = new LogFragment();
+                setTitle("Log In");
+            } else {
+                if (from == 3) {
+                    //from 3: back
+                    f = new IniFragment();
+                }else {
+                    if (from == 4) {
+                        //from 4: Logged in
+                        finish();
+                    }
+                    if (from == 666) {
+                        //from 4: Error on login
+                        f = new BadLogFragment();
+                    }
+                }
+            }
+        }
+        if (from != 4){
+            //Creamos un bundle con el text recibido del fragment
+            Bundle b = new Bundle();
+            b.putString("message", text);
+            //Añadimos el Bundle al nuevo fragment
+            f.setArguments(b);
+
+            FragmentManager fragmentManager = getSupportFragmentManager();
+            FragmentTransaction fragmentTransaction =
+                    fragmentManager.beginTransaction();
+            fragmentTransaction.replace(R.id.frameLayout, f);
+            fragmentTransaction.commit();
+        }
+
+    }
+}
Index: ../Git final/Proyectofinal/app/src/main/res/layout/fragment_log.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout/fragment_log.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout/fragment_log.xml	(revision )
@@ -0,0 +1,61 @@
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    tools:context="com.example.polpincho.proyectofinal.LogFragment">
+
+    <LinearLayout
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_marginRight="50dp"
+        android:layout_marginLeft="50dp"
+        android:layout_marginTop="100dp"
+        android:layout_marginBottom="100dp">
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:id="@+id/usernamelog"
+            android:layout_alignParentTop="true"
+            android:text=" Username"
+            android:textSize="20dp"
+            android:layout_weight="0.37"
+            android:gravity="center_vertical" />
+
+        <EditText
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:inputType="textPassword"
+            android:ems="10"
+            android:id="@+id/password"
+            android:hint="Password"
+            android:layout_below="@+id/usernamelog" />
+
+        <CheckBox
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="Keep session in"
+            android:id="@+id/session"
+            android:checked="false"
+            android:layout_weight="1" />
+
+        <Button
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="ENTER"
+            android:id="@+id/enter" />
+
+        <Button
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="Back"
+            android:id="@+id/backlog" />
+    </LinearLayout>
+
+
+</FrameLayout>
Index: ../Git final/Proyectofinal/.idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/.idea/encodings.xml	(revision )
+++ ../Git final/Proyectofinal/.idea/encodings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="PROJECT" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: ../Git final/Proyectofinal/gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- ../Git final/Proyectofinal/gradle.properties	(revision )
+++ ../Git final/Proyectofinal/gradle.properties	(revision )
@@ -0,0 +1,18 @@
+# Project-wide Gradle settings.
+
+# IDE (e.g. Android Studio) users:
+# Gradle settings configured through the IDE *will override*
+# any settings specified in this file.
+
+# For more details on how to configure your build environment visit
+# http://www.gradle.org/docs/current/userguide/build_environment.html
+
+# Specifies the JVM arguments used for the daemon process.
+# The setting is particularly useful for tweaking memory settings.
+# Default value: -Xmx10248m -XX:MaxPermSize=256m
+# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
+
+# When configured, Gradle will run in incubating parallel mode.
+# This option should only be used with decoupled projects. More details, visit
+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
+# org.gradle.parallel=true
\ No newline at end of file
Index: ../Git final/Proyectofinal/app/src/main/res/menu/menu_calculator.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/menu/menu_calculator.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/menu/menu_calculator.xml	(revision )
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    tools:context="com.example.polpincho.proyectofinal.Calculator">
+
+    <item android:id="@+id/calccall"
+        android:title="llamada"
+        android:icon="@drawable/ic_call_white_48dp"
+        app:showAsAction="always">
+    </item>
+
+    <item android:id="@+id/calcbrowser"
+        android:title="navegador"
+        android:icon="@drawable/ic_language_white_48dp"
+        app:showAsAction="always">
+    </item>
+
+    <item android:id="@+id/notis"
+        android:title="notificaciones"
+        app:showAsAction="always"
+        android:icon="@drawable/ic_sms_failed_white_48dp"
+        android:checkableBehavior="single">
+        <item android:id="@+id/submenu1"
+            android:title="Toast" />
+        <item android:id="@+id/submenu2"
+            android:title="SnackBar" />
+        <item android:id="@+id/submenu3"
+            android:title="De Estado">
+            <menu>
+                <group android:checkableBehavior="all">
+                    <item android:id="@+id/subsubmenu1"
+                        android:title="No Sticky" />
+                    <item android:id="@+id/subsubmenu2"
+                        android:title="Sticky" />
+                </group>
+            </menu>
+        </item>
+    </item>
+
+    <item android:id="@+id/CalcLogOut"
+        android:title="Log Out"
+        android:icon="@drawable/ic_exit_to_app_white_48dp"
+        app:showAsAction="always">
+    </item>
+
+</menu>
\ No newline at end of file
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/LogFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/LogFragment.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/LogFragment.java	(revision )
@@ -0,0 +1,190 @@
+package com.example.polpincho.proyectofinal;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.database.Cursor;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.CheckBox;
+import android.widget.EditText;
+import android.widget.TextView;
+import android.widget.Toast;
+import com.example.polpincho.proyectofinal.persistencia.BDUser;
+
+public class LogFragment extends Fragment implements View.OnClickListener{
+    TextView usernamed;
+    EditText pass;
+    Button into;
+    Button back;
+    CheckBox keep;
+
+    private OnFragmentInteractionListener mListener;
+
+    public LogFragment() {
+        // Required empty public constructor
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+    }
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+
+        View rootView = inflater.inflate(R.layout.fragment_log, container, false);
+
+        usernamed = (TextView) rootView.findViewById(R.id.usernamelog);
+        pass = (EditText) rootView.findViewById(R.id.password);
+        into = (Button) rootView.findViewById(R.id.enter);
+        into.setOnClickListener(this);
+        back = (Button) rootView.findViewById(R.id.backlog);
+        back.setOnClickListener(this);
+        keep = (CheckBox) rootView.findViewById(R.id.session);
+
+        Bundle args = this.getArguments();
+        if (args != null){
+            usernamed.setText(args.getString("message"));
+        }else{
+            usernamed.setText("Guest");
+        }
+        return rootView;
+    }
+
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (context instanceof OnFragmentInteractionListener) {
+            mListener = (OnFragmentInteractionListener) context;
+        } else {
+            throw new RuntimeException(context.toString()
+                    + " must implement OnFragmentInteractionListener");
+        }
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+        mListener = null;
+    }
+
+    @Override
+    public void onClick(View v) {
+        switch (v.getId()){
+            case R.id.enter:
+                BDUser bduser = new BDUser(getContext());
+                ContentValues valuesToStore = new ContentValues();
+                String password = pass.getText().toString();
+                String username = usernamed.getText().toString();
+                Cursor cursor = bduser.getPassByUsername(username);
+                if (cursor.moveToFirst()) {
+                    String s = cursor.getString(cursor.getColumnIndex("pass"));
+                    if (s.equals(password)) {
+                        cursor.close();
+                        SharedPreferences settings = getActivity().getSharedPreferences("MEMORYAPK", 0);
+                        SharedPreferences.Editor editor = settings.edit();
+                        editor.putString("UserActivo", username);
+                        editor.putBoolean("SessionActiva", true);
+                        editor.apply();
+
+                        if (keep.isChecked()) {
+                            BDHelper bdhelp = new BDHelper();
+                            bdhelp.execute(1);
+                        } else {
+                            BDHelper bdhelp = new BDHelper();
+                            bdhelp.execute(0);
+                        }
+
+                        Toast.makeText(getContext(), "Loggin done", Toast.LENGTH_SHORT).show();
+                        BDUser bdUser = new BDUser(getContext());
+                        Cursor c = bdUser.getfirstLog(username);
+                        if (c.moveToFirst()) {
+                            boolean aux = c.getInt(c.getColumnIndex("firstlog")) > 0;
+                            Log.e("first", aux+"");
+                            if (aux) {
+                                Intent intent = new Intent(getContext(), Perfil.class);
+                                startActivity(intent);
+                                if (mListener != null) {
+                                    mListener.onFragmentInteraction("", 4);
+                                } else {
+                                }
+                            }
+                            else{
+                                Intent intent = new Intent(getContext(), InMenu.class);
+                                startActivity(intent);
+                                if (mListener != null) {
+                                    mListener.onFragmentInteraction("", 4);
+                                } else {
+                                }
+                            }
+                        }
+                    } else {
+                        if (mListener != null) {
+                            mListener.onFragmentInteraction("", 666);
+                        } else {
+                        }
+                    }
+                }
+
+                pass.setText("");
+                break;
+            case R.id.backlog:
+                if (mListener != null) {
+                    //En este caso, si no hay nada escrito en el EditText,
+                    //pondremos el String vació ""
+                    mListener.onFragmentInteraction(usernamed.getText().toString(),3);
+                }else {
+                    Log.v("Fragment1", "No listener attached");
+                }
+                break;
+            default:
+                Log.v("Fragment2","Not a button");
+        }
+    }
+
+
+
+    private class BDHelper extends AsyncTask<Integer, Integer, String> {
+
+        @Override
+        protected void onPreExecute() {
+            super.onPreExecute();
+        }
+
+        @Override
+        protected void onPostExecute(String s) {
+
+            super.onPostExecute(s);
+        }
+
+        @Override
+        protected String doInBackground(Integer... params) {
+            //Instanciamos el SharedPreferences
+            SharedPreferences settings = getContext().getSharedPreferences("MEMORYAPK", Context.MODE_PRIVATE);
+            //Consultamos
+            String User = settings.getString("UserActivo", "Guest");
+            BDUser bdUser = new BDUser(getContext());
+            boolean kip = false;
+            if (params[0]==1)kip= true;
+            boolean aux = bdUser.updatekeeplogged(kip,User);
+            bdUser.close();
+            Log.e("Puto update", ""+aux);
+            return null;
+        }
+
+        @Override
+        protected void onCancelled() {
+            super.onCancelled();
+        }
+    }
+
+}
Index: ../Git final/Proyectofinal/app/src/main/res/layout/fragment_ini.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout/fragment_ini.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout/fragment_ini.xml	(revision )
@@ -0,0 +1,54 @@
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".IniFragment">
+
+    <LinearLayout
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_margin="80dp"
+        android:gravity="center">
+
+        <EditText
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:id="@+id/usernameini"
+            android:hint="Username"
+            android:layout_alignParentTop="true" />
+
+
+        <LinearLayout
+            android:orientation="horizontal"
+            android:layout_width="match_parent"
+            android:layout_height="62dp"
+            android:layout_alignBottom="@+id/password"
+            android:layout_gravity="top"
+            android:layout_marginTop="30dp">
+
+            <Button
+                android:layout_width="match_parent"
+                android:layout_height="80dp"
+                android:text="Log in"
+                android:id="@+id/log"
+                android:layout_below="@+id/password"
+                android:layout_alignParentEnd="true"
+                android:layout_alignParentStart="true"
+                android:layout_weight="1" />
+
+            <Button
+                android:layout_width="match_parent"
+                android:layout_height="80dp"
+                android:text="Sign up"
+                android:id="@+id/sign"
+                android:layout_below="@+id/password"
+                android:layout_centerHorizontal="true"
+                android:layout_weight="1" />
+
+        </LinearLayout>
+
+
+    </LinearLayout>
+
+</FrameLayout>
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Reproductor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Reproductor.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Reproductor.java	(revision )
@@ -0,0 +1,208 @@
+package com.example.polpincho.proyectofinal;
+
+import android.app.AlertDialog;
+import android.app.Notification;
+import android.app.NotificationManager;
+import android.app.PendingIntent;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.ServiceConnection;
+import android.content.SharedPreferences;
+import android.content.pm.ActivityInfo;
+import android.media.MediaPlayer;
+import android.net.Uri;
+import android.os.Environment;
+import android.os.IBinder;
+import android.support.design.widget.NavigationView;
+import android.support.v4.app.NotificationCompat;
+import android.support.v4.app.TaskStackBuilder;
+import android.support.v4.widget.DrawerLayout;
+import android.support.v7.app.ActionBarDrawerToggle;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.Button;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import java.io.File;
+import java.io.IOException;
+
+public class Reproductor extends AppCompatActivity{
+
+    private Button play;
+    private Button stop;
+    private Button next;
+    private Button ante;
+    private Button repla;
+    private Button mute;
+    private Toolbar toolbar;
+    private TextView titulo;
+
+    MediaPlayerServ mService;
+    boolean bound;
+
+    private ServiceConnection mConnection = new ServiceConnection() {
+
+        @Override
+        public void onServiceConnected(ComponentName className,
+                                       IBinder service) {
+            // We've bound to LocalService, cast the IBinder and get LocalService instance
+            MediaPlayerServ.MediaPlayerBinder binder = (MediaPlayerServ.MediaPlayerBinder) service;
+
+            mService = binder.getService();
+
+            bound = true;
+        }
+
+        @Override
+        public void onServiceDisconnected(ComponentName arg0) {
+            bound = false;
+
+        }
+    };
+
+
+
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_reproductor);
+        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
+
+        toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+        setTitle("Media Player");
+        /*
+
+        File sdCard = Environment.getExternalStorageDirectory();
+        File song = new File(sdCard.getAbsolutePath() + "/media/music/data-0.mp3");
+
+        Log.d ("path",song.getAbsolutePath()+"");
+        Log.d ("path",song.exists()+"");
+        mediaPlayer = MediaPlayer.create(this, R.raw.data0);
+        */
+        File SDcard = Environment.getExternalStorageDirectory();
+        File Music = new File(SDcard.getAbsolutePath()+"/Music");
+        String[] songlist = Music.list();
+
+        titulo = (TextView) findViewById(R.id.titlesong);
+        play = (Button) findViewById(R.id.playea);
+        stop = (Button) findViewById(R.id.stopea);
+        repla = (Button) findViewById(R.id.replay);
+        ante = (Button) findViewById(R.id.ante);
+        next = (Button) findViewById(R.id.nexta);
+        mute = (Button) findViewById(R.id.mutea);
+
+
+        if (Music.exists()) titulo.setText(songlist[0]);
+        else titulo.setText("demo");
+        play.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                boolean playing = false;
+                playing = mService.play();
+                if (!playing){
+                    play.setBackground(v.getResources().getDrawable(R.drawable.ic_play_arrow_white_48dp));
+                } else{
+                    play.setBackground(v.getResources().getDrawable(R.drawable.ic_pause_white_48dp));
+                }
+            }
+        });
+        stop.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                mService.Stop();
+                play.setBackground(v.getResources().getDrawable(R.drawable.ic_play_arrow_white_48dp));
+            }
+        });
+        repla.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                mService.Replay();
+                play.setBackground(v.getResources().getDrawable(R.drawable.ic_pause_white_48dp));
+            }
+        });
+        ante.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                String aux = mService.previous();
+                titulo.setText(aux);
+                play.setBackground(v.getResources().getDrawable(R.drawable.ic_pause_white_48dp));
+            }
+        });
+        next.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                String aux = mService.next();
+                titulo.setText(aux);
+                play.setBackground(v.getResources().getDrawable(R.drawable.ic_pause_white_48dp));
+            }
+        });
+
+        mute.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                boolean muted = false;
+                muted = mService.SetVolume();
+                if (!muted){
+                    mute.setBackground(v.getResources().getDrawable(R.drawable.ic_volume_mute_white_48dp));
+                }
+                else{
+                    mute.setBackground(v.getResources().getDrawable(R.drawable.ic_volume_up_white_48dp));
+                }
+            }
+        });
+
+    }
+
+
+    @Override
+    protected void onStart() {
+        super.onStart();
+
+        Intent intent = new Intent(Reproductor.this, MediaPlayerServ.class);
+        bindService(intent, mConnection, Context.BIND_AUTO_CREATE);
+
+    }
+
+    @Override
+    protected void onStop() {
+        super.onStop();
+        if (bound) {
+            unbindService(mConnection);
+            bound = false;
+        }
+    }
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        getMenuInflater().inflate(R.menu.menu_reproductor, menu);
+        return true;
+    }
+
+    public boolean onOptionsItemSelected(MenuItem item) {
+        // Handle item selection
+        switch (item.getItemId()) {
+            case R.id.MediaLogOut:
+                SharedPreferences settings = getApplicationContext().getSharedPreferences("MEMORYAPK", Context.MODE_PRIVATE);
+                SharedPreferences.Editor editor = settings.edit();
+                editor.putBoolean("SessionActiva", false);
+                editor.apply();
+                Intent i = new Intent(getApplicationContext(), Login.class);
+                startActivity(i);
+                finish();
+                return true;
+            default:
+                return super.onOptionsItemSelected(item);
+        }
+    }
+}
Index: ../Git final/Proyectofinal/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/.idea/modules.xml	(revision )
+++ ../Git final/Proyectofinal/.idea/modules.xml	(revision )
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/Proyectofinal.iml" filepath="$PROJECT_DIR$/Proyectofinal.iml" />
+      <module fileurl="file://$PROJECT_DIR$/app/app.iml" filepath="$PROJECT_DIR$/app/app.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: ../Git final/Proyectofinal/app/src/test/java/com/example/polpincho/proyectofinal/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/test/java/com/example/polpincho/proyectofinal/ExampleUnitTest.java	(revision )
+++ ../Git final/Proyectofinal/app/src/test/java/com/example/polpincho/proyectofinal/ExampleUnitTest.java	(revision )
@@ -0,0 +1,15 @@
+package com.example.polpincho.proyectofinal;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * To work on unit tests, switch the Test Artifact in the Build Variants view.
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
Index: ../Git final/Proyectofinal/app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/values/dimens.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/values/dimens.xml	(revision )
@@ -0,0 +1,7 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+    <dimen name="fab_margin">16dp</dimen>
+    <dimen name="appbar_padding_top">8dp</dimen>
+</resources>
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/EditPerfil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/EditPerfil.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/EditPerfil.java	(revision )
@@ -0,0 +1,347 @@
+package com.example.polpincho.proyectofinal;
+
+import android.app.AlertDialog;
+import android.content.ContentValues;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.database.Cursor;
+import android.net.Uri;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.provider.MediaStore;
+import android.support.v4.app.Fragment;
+import android.text.InputType;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.CheckBox;
+import android.widget.EditText;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import com.example.polpincho.proyectofinal.persistencia.BDUser;
+
+import java.io.IOException;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+public class EditPerfil extends Fragment implements View.OnClickListener{
+
+    private OnFragmentInteractionListener mListener;
+    Button editback, editsave, editselectnewicon, editdeleteicon, editrestartpoints, editlogout;
+    CheckBox sessionk;
+    ImageView editicon;
+    private String uri, passwordconfdialog;
+    private EditText passworduno, passworddos, newemail;
+    private String passwordunostr, passworddosstr, newemailstr;
+    private Boolean pas1,mai1,uri1,keepSes,checked;
+
+    String User;
+    View rootView;
+
+    public EditPerfil() {
+        // Required empty public constructor
+    }
+
+    public static final Pattern VALID_EMAIL_ADDRESS_REGEX1 =
+            Pattern.compile("^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$", Pattern.CASE_INSENSITIVE);
+
+    public static boolean validatemail(String emailStr) {
+        Matcher matcher = VALID_EMAIL_ADDRESS_REGEX1.matcher(emailStr);
+        return matcher.find();
+    }
+
+    public static final Pattern VALID_PASS_ADDRESS_REGEX1 =
+            Pattern.compile("((?=.*[a-z])(?=.*\\d)(?=.*[A-Z]).{8,40})", Pattern.CASE_INSENSITIVE);
+
+    public static boolean validatepass(String passStr) {
+        Matcher matcher = VALID_PASS_ADDRESS_REGEX1.matcher(passStr);
+        return matcher.find();
+    }
+
+
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+    }
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+
+        rootView = inflater.inflate(R.layout.fragment_edit_perfil, container, false);
+
+        setHasOptionsMenu(true);
+
+        editicon = (ImageView) rootView.findViewById(R.id.EditIcon);
+        editselectnewicon = (Button) rootView.findViewById(R.id.EditSelectNewIcon);
+        editdeleteicon = (Button) rootView.findViewById(R.id.EditDeleteIcon);
+        editsave = (Button) rootView.findViewById(R.id.EditSaveButton);
+        editback = (Button) rootView.findViewById(R.id.EditBackButton);
+        editlogout = (Button) rootView.findViewById(R.id.EditLoggout);
+        editrestartpoints = (Button) rootView.findViewById(R.id.EditRestPunt);
+        sessionk = (CheckBox) rootView.findViewById(R.id.EditKeepSes);
+        newemail = (EditText) rootView.findViewById(R.id.EditMail);
+        passworduno = (EditText) rootView.findViewById(R.id.EditNewPassword);
+        passworddos = (EditText) rootView.findViewById(R.id.EditNewPasswordConf);
+
+        editselectnewicon.setOnClickListener(this);
+        editdeleteicon.setOnClickListener(this);
+        editsave.setOnClickListener(this);
+        editback.setOnClickListener(this);
+        editrestartpoints.setOnClickListener(this);
+        editlogout.setOnClickListener(this);
+
+        SharedPreferences settings = getContext().getSharedPreferences("MEMORYAPK", Context.MODE_PRIVATE);
+        //Consultamos
+        User = settings.getString("UserActivo", "Guest");
+        keepSes = false;
+        BDUser bdUser = new BDUser(getContext());
+        Cursor c = bdUser.getUser(User);
+        if (c.moveToFirst()) {
+            sessionk.setChecked(c.getInt(c.getColumnIndex("keep"))>0);
+            String uri = c.getString(c.getColumnIndex("uri"));
+            Log.e("uri",""+uri);
+            if (uri != null) {
+                Uri imageway = Uri.parse(uri);
+                try {
+                    editicon.setImageBitmap(MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), imageway));
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+            }
+        }
+        c.close();
+        bdUser.close();
+
+        sessionk.setOnClickListener(this);
+        uri = "";
+        uri1= false;
+
+        return rootView;
+    }
+
+    @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        inflater.inflate(R.menu.menu_perfil_edit, menu);
+        super.onCreateOptionsMenu(menu, inflater);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()) {
+            case R.id.PerfilEditExit:
+                SharedPreferences settings = getContext().getSharedPreferences("MEMORYAPK", Context.MODE_PRIVATE);
+                SharedPreferences.Editor editor = settings.edit();
+                editor.putBoolean("SessionActiva", false);
+                editor.apply();
+                if (mListener != null) {
+                    mListener.onFragmentInteraction("end", 5);
+                }else {
+                    Log.v("Fragment1", "No listener attached");
+                }
+                return true;
+        }
+        return super.onOptionsItemSelected(item);
+    }
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (context instanceof OnFragmentInteractionListener) {
+            mListener = (OnFragmentInteractionListener) context;
+        } else {
+            throw new RuntimeException(context.toString()
+                    + " must implement OnFragmentInteractionListener");
+        }
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+        mListener = null;
+    }
+
+
+    //Importante! Aquí no se puede usar el método del "onClick" en xml
+    // por que referencia a la Activity y no al fragment!!
+    @Override
+    public void onClick(View v) {
+        switch (v.getId()){
+            case R.id.EditSelectNewIcon:
+                Intent getImageAsContent = new Intent(Intent.ACTION_GET_CONTENT, null);
+                getImageAsContent.setType("image/*");
+                startActivityForResult(getImageAsContent, 1);
+                break;
+            case R.id.EditDeleteIcon:
+                uri1 = true;
+                editicon.setImageDrawable(getResources().getDrawable(R.drawable.default_user));
+                break;
+            case R.id.EditRestPunt:
+                AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
+                    final EditText quantity = new EditText(getActivity());
+                    final EditText lot = new EditText(getActivity());
+
+                builder.setTitle("Resetear puntuacion");
+                builder.setMessage("Estas seguro que quieres resetear tu puntuacion?");
+                builder.setPositiveButton("Ok",
+                        new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                BDHelper bdHelper = new BDHelper();
+                                bdHelper.execute(2);
+                                if (mListener != null) {
+                                    mListener.onFragmentInteraction("end", 4);
+                                } else {
+                                    Log.v("Fragment1", "No listener attached");
+                                }
+                            }
+                        });
+                builder.setNegativeButton("Cancel",
+                        new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                            }
+                        });
+                AlertDialog dialog = builder.create();
+                dialog.show();
+                break;
+            case R.id.EditKeepSes:
+                keepSes = !keepSes;
+                break;
+            case R.id.EditSaveButton:
+                newemailstr = newemail.getText().toString();
+                passwordunostr = passworduno.getText().toString();
+                passworddosstr = passworddos.getText().toString();
+                pas1 = validatepass(passwordunostr);
+                mai1 = validatemail(newemailstr);
+                BDHelper bdHelper = new BDHelper();
+                bdHelper.execute(1);
+                break;
+            case R.id.EditBackButton:
+                if (mListener != null) {
+                    //En este caso, si no hay nada escrito en el EditText,
+                    //pondremos el String vació ""
+                    mListener.onFragmentInteraction("",1);
+                }else {
+                    Log.v("Fragment1", "No listener attached");
+                }
+                break;
+            case R.id.EditLoggout:
+                SharedPreferences settings = getContext().getSharedPreferences("MEMORYAPK", Context.MODE_PRIVATE);
+                SharedPreferences.Editor editor = settings.edit();
+                editor.putBoolean("SessionActiva", false);
+                editor.apply();
+                Intent i = new Intent(getContext(), Login.class);
+                startActivity(i);
+                if (mListener != null) {
+                    mListener.onFragmentInteraction("end",4);
+                }else {
+                    Log.v("Fragment1", "No listener attached");
+                }
+                break;
+            default:
+                Log.v("editperfil","Not a button");
+        }
+    }
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        if(resultCode < 0){
+            if(requestCode >= 1 && requestCode <= 3){
+                data.getData();
+                Uri selectedImage = data.getData();
+                uri = selectedImage.toString();
+
+                Log.v("PICK","Selected image uri" + selectedImage);
+                try {
+                    editicon.setImageBitmap(MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), selectedImage));
+                    uri1 = true;
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+
+            }
+        }else{
+            Log.v("Result","Something happened");
+        }
+    }
+
+    private class BDHelper extends AsyncTask<Integer, Integer, String> {
+
+        @Override
+        protected void onPreExecute() {
+            checked = sessionk.isChecked();
+            super.onPreExecute();
+        }
+
+        @Override
+        protected void onPostExecute(String s) {
+
+            super.onPostExecute(s);
+        }
+
+        @Override
+        protected String doInBackground(Integer... params) {
+            if (params[0]==1) {
+                ContentValues values = new ContentValues();
+                if (mai1) {
+                    Log.e("Thread", "mail ok");
+                    values.put("mail", newemailstr);
+                }
+                if (pas1) {
+                    Log.e("Thread", "pass1 ok");
+                    if (passworddosstr.equals(passwordunostr)) {
+                        Log.e("Thread", "pass2 ok");
+                        values.put("pass", passworddosstr);
+                    }
+                }
+                Log.e("uri", "" + uri);
+                if (uri1) {
+                    if (uri.length() != 0) {
+                        Log.e("Thread", "uri ok");
+                        values.put("uri", uri);
+
+                    } else {
+                        values.put("uri", "NULL");
+                    }
+                }
+                if (keepSes) {
+                    values.put("keep", checked);
+                }
+                if (uri1 || mai1 || pas1 || keepSes) {
+                    BDUser bdUser = new BDUser(getContext());
+                    boolean aux = bdUser.updateEdit(values, User);
+                    bdUser.close();
+                    Log.e("Puto update", "" + aux);
+                }
+            }
+            if (params[0]== 2){
+                BDUser bdUser = new BDUser(getContext());
+                bdUser.ResetPointsUser(User);
+            }
+            if (params[0] == 3){
+                BDUser bdUser = new BDUser(getContext());
+                Cursor c = bdUser.getPassByUsername(User);
+                if (c.moveToFirst()){
+                    passwordconfdialog = c.getString(c.getColumnIndex("pass"));
+                }
+                c.close();
+                bdUser.close();
+            }
+            return null;
+        }
+
+        @Override
+        protected void onCancelled() {
+            super.onCancelled();
+        }
+    }
+
+}
Index: ../Git final/Proyectofinal/app/src/main/res/layout/activity_perfil.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout/activity_perfil.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout/activity_perfil.xml	(revision )
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:id="@+id/frameperfil"
+    tools:context="com.example.polpincho.proyectofinal.Perfil">
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar_perfil"
+        android:title="Perfil"
+        android:minHeight="?attr/actionBarSize"
+        android:background="@color/colorPrimary"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+    </android.support.v7.widget.Toolbar>
+
+
+</FrameLayout>
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/PagerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/PagerAdapter.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/PagerAdapter.java	(revision )
@@ -0,0 +1,59 @@
+package com.example.polpincho.proyectofinal;
+
+/**
+ * Created by polpincho on 02/02/2016.
+ */
+
+
+import android.support.v4.app.Fragment;
+import android.content.Context;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentPagerAdapter;
+
+
+public class PagerAdapter extends FragmentPagerAdapter {
+
+
+    final int PAGE_COUNT = 2;
+    private String tabTitles[] = new String[] { "Memory", "Ranking" };
+    private Context context;
+    public String tag[] = new String[] {"",""};
+    Fragment tab = null;
+
+    //creadora
+    public PagerAdapter(FragmentManager fm, Context context) {
+        super(fm);
+        this.context = context;
+    }
+
+
+    //crea las tabas, siempre tiene que retornar con el numero de tabs que queremos mostrar
+    @Override
+    public int getCount() {
+        return PAGE_COUNT;
+    }
+
+    //Lanza el fragment asociado con el numero de tab
+    @Override
+    public Fragment getItem(int position) {
+        switch(position) {
+            case 0:
+                tab = new Memory();
+                tag[0]= tab.getTag();
+                break;
+            case 1:
+                tab = new Ranking();
+                tag[1]= tab.getTag();
+                break;
+        }
+        return tab;
+    }
+
+    //pone el nombre en cada tab
+    @Override
+    public CharSequence getPageTitle(int position) {
+        // Generate title based on item position
+        return tabTitles[position];
+    }
+}
+
Index: ../Git final/Proyectofinal/app/src/main/res/menu/menu_reproductor.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/menu/menu_reproductor.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/menu/menu_reproductor.xml	(revision )
@@ -0,0 +1,13 @@
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:title="Memory"
+    tools:context="com.example.polpincho.proyectofinal.Reproductor">
+
+    <item android:id="@+id/MediaLogOut"
+        android:title="Log Out"
+        android:icon="@drawable/ic_exit_to_app_white_48dp"
+        app:showAsAction="ifRoom">
+    </item>
+
+</menu>
\ No newline at end of file
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/OnFragmentInteractionListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/OnFragmentInteractionListener.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/OnFragmentInteractionListener.java	(revision )
@@ -0,0 +1,8 @@
+package com.example.polpincho.proyectofinal;
+
+/**
+ * Created by polpincho on 30/01/2016.
+ */
+public interface OnFragmentInteractionListener {
+    void onFragmentInteraction(String text, Integer from);
+}
Index: ../Git final/Proyectofinal/settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/settings.gradle	(revision )
+++ ../Git final/Proyectofinal/settings.gradle	(revision )
@@ -0,0 +1,1 @@
+include ':app'
Index: ../Git final/Proyectofinal/app/src/main/res/menu/menu_pager_holder.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/menu/menu_pager_holder.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/menu/menu_pager_holder.xml	(revision )
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:title="Memory"
+    tools:context="com.example.polpincho.proyectofinal.PagerHolder">
+
+    <item android:id="@+id/HolderRestart"
+        android:title="Reset"
+        android:icon="@drawable/ic_replay_white_48dp"
+        app:showAsAction="ifRoom">
+    </item>
+    <item android:id="@+id/HolderLogOut"
+        android:title="Log Out"
+        android:icon="@drawable/ic_exit_to_app_white_48dp"
+        app:showAsAction="ifRoom">
+    </item>
+
+</menu>
\ No newline at end of file
Index: ../Git final/Proyectofinal/app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/.gitignore	(revision )
+++ ../Git final/Proyectofinal/app/.gitignore	(revision )
@@ -0,0 +1,1 @@
+/build
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Perfil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Perfil.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Perfil.java	(revision )
@@ -0,0 +1,92 @@
+package com.example.polpincho.proyectofinal;
+
+import android.content.ContentValues;
+import android.content.Intent;
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.support.v7.widget.Toolbar;
+
+import com.example.polpincho.proyectofinal.persistencia.BDUser;
+
+public class Perfil extends AppCompatActivity implements OnFragmentInteractionListener{
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_perfil);
+
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar_perfil);
+        setSupportActionBar(toolbar);
+
+        boolean aux = false;
+        Intent i = getIntent();
+        if (i.hasExtra("Username")){
+            String user = i.getStringExtra("Username");
+            ContentValues cv = new ContentValues();
+            cv.put("firstlog",false);
+            BDUser bdUser = new BDUser(this);
+            bdUser.FirstLog(user);
+            aux = true;
+            bdUser.close();
+        }
+        //Creamos el primer fragment, y no le pasamos argumentos!
+        setTitle("My Profile");
+        FragmentManager fragmentManager = getSupportFragmentManager();
+        FragmentTransaction fragmentTransaction =
+                fragmentManager.beginTransaction();
+        //Reemplazamos el Frame Layout de la Activity por el nuevo fragment.
+        //El Frame Layout s el contenedor
+        if (aux) {
+            fragmentTransaction.replace(R.id.frameperfil, new EditPerfil());
+        }
+        else {
+            fragmentTransaction.replace(R.id.frameperfil, new ViewPerfil());
+        }
+        fragmentTransaction.commit();
+    }
+
+
+    @Override
+    public void onFragmentInteraction(String text, Integer from) {
+
+        Fragment f = null;
+
+        if (from == 1 ) {
+            f = new ViewPerfil();
+            //Podemos hacer directamente setTitle por que nuestra activity
+            //es AppCompatActivity
+        }
+        else {
+            if(from == 2) {
+                f = new EditPerfil();
+            }
+            else{
+                if (from == 4 && text.equals("end")) {
+                    Intent i = new Intent(getApplicationContext(), Login.class);
+                    startActivity(i);
+                    finish();
+                }
+                else{
+                    if (from == 5 && text.equals("end")){
+                        Intent i = new Intent(getApplicationContext(), Login.class);
+                        startActivity(i);
+                        finish();
+                    }
+                }
+            }
+        }
+
+        if (!(from == 4 || from == 5)) {
+
+            FragmentManager fragmentManager = getSupportFragmentManager();
+            FragmentTransaction fragmentTransaction =
+                    fragmentManager.beginTransaction();
+            fragmentTransaction.replace(R.id.frameperfil, f);
+            fragmentTransaction.commit();
+        }
+
+    }
+}
Index: ../Git final/Proyectofinal/app/src/main/res/layout/layout_pass_confirm.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout/layout_pass_confirm.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout/layout_pass_confirm.xml	(revision )
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical" android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <EditText
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:inputType="textPassword"
+        android:ems="10"
+        android:id="@+id/PAssCOnf"
+        android:layout_centerVertical="true"
+        android:layout_centerHorizontal="true" />
+</RelativeLayout>
\ No newline at end of file
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Calculator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Calculator.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Calculator.java	(revision )
@@ -0,0 +1,729 @@
+package com.example.polpincho.proyectofinal;
+
+import android.app.Notification;
+import android.app.NotificationManager;
+import android.app.PendingIntent;
+import android.content.ContentValues;
+import android.content.Context;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.database.Cursor;
+import android.net.Uri;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.support.design.widget.Snackbar;
+import android.support.v4.app.NotificationCompat;
+import android.support.v4.app.TaskStackBuilder;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.Button;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.example.polpincho.proyectofinal.persistencia.BDUser;
+
+
+public class Calculator extends AppCompatActivity implements View.OnClickListener{
+
+    private int Notis = 1;
+    private TextView visor;
+    private Button button0;
+    private Button button1;
+    private Button button2;
+    private Button button3;
+    private Button button4;
+    private Button button5;
+    private Button button6;
+    private Button button7;
+    private Button button8;
+    private Button button9;
+    private Button borrar;
+    private Button equal;
+    private Button sum;
+    private Button minus;
+    private Button multi;
+    private Button divide;
+    private Button dot;
+    private Button answer;
+
+    private String valor;
+    private double val = 0;
+    private double ans = 0;
+    private double dec = 0;
+    private double ant = 0;
+    private int op = 0;
+    private boolean negative = false;
+    private boolean decimal = false;
+    private boolean errores = false;
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_calculator);
+
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+        setTitle("");
+
+        BDHelper bdHelper = new BDHelper();
+        bdHelper.execute(5);
+
+        visor = (TextView) findViewById(R.id.visor);
+        button0 = (Button) findViewById(R.id.button0);
+        button1 = (Button) findViewById(R.id.button1);
+        button2 = (Button) findViewById(R.id.button2);
+        button3 = (Button) findViewById(R.id.button3);
+        button4 = (Button) findViewById(R.id.button4);
+        button5 = (Button) findViewById(R.id.button5);
+        button6 = (Button) findViewById(R.id.button6);
+        button7 = (Button) findViewById(R.id.button7);
+        button8 = (Button) findViewById(R.id.button8);
+        button9 = (Button) findViewById(R.id.button9);
+        borrar = (Button) findViewById(R.id.borrar);
+        equal = (Button) findViewById(R.id.equal);
+        sum = (Button) findViewById(R.id.sum);
+        minus = (Button) findViewById(R.id.minus);
+        multi = (Button) findViewById(R.id.multi);
+        divide = (Button) findViewById(R.id.divide);
+        dot = (Button) findViewById(R.id.dot);
+        answer = (Button) findViewById(R.id.ans);
+
+        button0.setOnClickListener(this);
+        button1.setOnClickListener(this);
+        button2.setOnClickListener(this);
+        button3.setOnClickListener(this);
+        button4.setOnClickListener(this);
+        button5.setOnClickListener(this);
+        button6.setOnClickListener(this);
+        button7.setOnClickListener(this);
+        button8.setOnClickListener(this);
+        button9.setOnClickListener(this);
+        borrar.setOnClickListener(this);
+        equal.setOnClickListener(this);
+        sum.setOnClickListener(this);
+        minus.setOnClickListener(this);
+        multi.setOnClickListener(this);
+        divide.setOnClickListener(this);
+        dot.setOnClickListener(this);
+        answer.setOnClickListener(this);
+    }
+
+
+
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        getMenuInflater().inflate(R.menu.menu_calculator, menu);
+        return true;
+    }
+
+    public boolean onOptionsItemSelected(MenuItem item) {
+        // Handle item selection
+        switch (item.getItemId()) {
+            case R.id.calccall:
+                Intent i = new Intent(Intent.ACTION_DIAL, Uri.parse("tel:" + visor.getText().toString()));
+                startActivity(i);
+                return true;
+            case R.id.calcbrowser:
+                i = new Intent(Intent.ACTION_VIEW,
+                        Uri.parse("http://"));
+                startActivity(i);
+                return true;
+            case R.id.CalcLogOut:
+                SharedPreferences settings = getApplicationContext().getSharedPreferences("MEMORYAPK", Context.MODE_PRIVATE);
+                SharedPreferences.Editor editor = settings.edit();
+                editor.putBoolean("SessionActiva", false);
+                editor.apply();
+                i = new Intent(getApplicationContext(), Login.class);
+                startActivity(i);
+                finish();
+                return true;
+            case R.id.submenu1:
+                Toast.makeText(getApplicationContext(), "Toast Notifications", Toast.LENGTH_SHORT).show();
+                Notis = 1;
+                savenotis();
+                return true;
+            case R.id.submenu2:
+                Toast.makeText(getApplicationContext(), "SnackBar Notifications", Toast.LENGTH_SHORT).show();
+                Notis = 2;
+                savenotis();
+                return true;
+            case R.id.subsubmenu2:
+                Toast.makeText(getApplicationContext(), "Sticky State Notifications", Toast.LENGTH_SHORT).show();
+                Notis = 4;
+                savenotis();
+                return true;
+            case R.id.subsubmenu1:
+                Toast.makeText(getApplicationContext(), "No Sticky State Notifications", Toast.LENGTH_SHORT).show();
+                Notis = 3;
+                savenotis();
+                return true;
+            default:
+                return super.onOptionsItemSelected(item);
+        }
+    }
+
+    private void savenotis() {
+        BDHelper bdhelp = new BDHelper();
+        bdhelp.execute(Notis);
+    }
+
+    private class BDHelper extends AsyncTask<Integer, Integer, String> {
+
+        @Override
+        protected void onPreExecute() {
+            super.onPreExecute();
+        }
+
+        @Override
+        protected void onPostExecute(String s) {
+
+            super.onPostExecute(s);
+        }
+
+        @Override
+        protected String doInBackground(Integer... params) {
+            //Instanciamos el SharedPreferences
+            SharedPreferences settings = getApplicationContext().getSharedPreferences("MEMORYAPK", Context.MODE_PRIVATE);
+            //Consultamos
+            String User = settings.getString("UserActivo", "Guest");
+            if (params[0]==5){
+                BDUser bdUser = new BDUser(getApplicationContext());
+                Cursor c = bdUser.getNotis(User);
+                if (c.moveToFirst()) {
+                    Notis = c.getInt(c.getColumnIndex("notis"));
+                }
+                c.close();
+                bdUser.close();
+            }
+            else {
+                BDUser bdUser = new BDUser(getApplicationContext());
+                boolean aux = bdUser.updatenotis(params[0], User);
+                bdUser.close();
+                Log.e("Puto update", "" + aux);
+            }
+            return null;
+        }
+
+        @Override
+        protected void onCancelled() {
+            super.onCancelled();
+        }
+    }
+
+
+    @Override
+    protected void onSaveInstanceState(Bundle outState) {
+        outState.putDouble("val", val);
+        outState.putDouble("ant", ant);
+        outState.putDouble("ans", ans);
+        outState.putDouble("dec", dec);
+        outState.putInt("op", op);
+        outState.putBoolean("errores", errores);
+        outState.putBoolean("negative", negative);
+        outState.putBoolean("decimal", decimal);
+        outState.putString("valor", valor);
+        outState.putInt("Notis", Notis);
+        super.onSaveInstanceState(outState);
+    }
+
+    @Override
+    protected void onRestoreInstanceState(Bundle savedInstanceState) {
+        val = savedInstanceState.getDouble("val");
+        ant = savedInstanceState.getDouble("ant");
+        ans = savedInstanceState.getDouble("ans");
+        dec = savedInstanceState.getDouble("dec");
+        op = savedInstanceState.getInt("op");
+        errores = savedInstanceState.getBoolean("errores");
+        negative = savedInstanceState.getBoolean ("negative");
+        decimal = savedInstanceState.getBoolean("decimal");
+        valor = savedInstanceState.getString("valor");
+        Notis = savedInstanceState.getInt("Notis");
+        visor.setText(valor);
+
+
+        super.onRestoreInstanceState(savedInstanceState);
+    }
+
+    @Override
+    public void onClick(View v) {
+        switch (v.getId()) {
+            case R.id.button0:
+                if(val  < 1.0E10) {
+                    if (decimal) {
+                        dec /= 10;
+                    } else {
+                        val *= 10;
+                    }
+                    if (decimal) {
+                        valor = String.valueOf(val);
+                    } else {
+                        valor = String.format("%.0f", val);
+                    }
+                    visor.setText(valor);
+                }
+                break;
+            case R.id.button1:
+                if(val  < 1.0E10) {
+                    if (decimal) {
+                        if (negative) {
+                            val -= dec;
+                        } else {
+                            val += dec;
+                        }
+                        dec /= 10;
+                    } else {
+                        if (negative) {
+                            val *= 10;
+                            val -= 1;
+                        } else {
+                            val *= 10;
+                            val += 1;
+                        }
+                    }
+                    if (decimal) {
+                        valor = String.valueOf(val);
+                    } else {
+                        valor = String.format("%.0f", val);
+                    }
+                    visor.setText(valor);
+                }
+                break;
+            case R.id.button2:
+                if(val  < 1.0E10) {
+                    if (decimal) {
+                        if (negative) {
+                            val -= dec * 2;
+                        } else {
+                            val += dec * 2;
+                        }
+                        dec /= 10;
+                    } else {
+                        if (negative) {
+                            val *= 10;
+                            val -= 2;
+                        } else {
+                            val *= 10;
+                            val += 2;
+                        }
+                    }
+                    if (decimal) {
+                        valor = String.valueOf(val);
+                    } else {
+                        valor = String.format("%.0f", val);
+                    }
+                    visor.setText(valor);
+                }
+                break;
+            case R.id.button3:
+                if(val  < 1.0E10) {
+                    if (decimal) {
+                        if (negative) {
+                            val -= dec * 3;
+                        } else {
+                            val += dec * 3;
+                        }
+                        dec /= 10;
+                    } else {
+                        if (negative) {
+                            val *= 10;
+                            val -= 3;
+                        } else {
+                            val *= 10;
+                            val += 3;
+                        }
+                    }
+                    if (decimal) {
+                        valor = String.valueOf(val);
+                    } else {
+                        valor = String.format("%.0f", val);
+                    }
+                    visor.setText(valor);
+                }
+                break;
+            case R.id.button4:
+                if(val  < 1.0E10) {
+                    if (decimal) {
+                        if (negative) {
+                            val -= dec * 4;
+                        } else {
+                            val += dec * 4;
+                        }
+                        dec /= 10;
+                    } else {
+                        if (negative) {
+                            val *= 10;
+                            val -= 4;
+                        } else {
+                            val *= 10;
+                            val += 4;
+                        }
+                    }
+                    if (decimal) {
+                        valor = String.valueOf(val);
+                    } else {
+                        valor = String.format("%.0f", val);
+                    }
+                    visor.setText(valor);
+                }
+                break;
+            case R.id.button5:
+                if(val  < 1.0E10) {
+                    if (decimal) {
+                        if (negative) {
+                            val -= dec * 5;
+                        } else {
+                            val += dec * 5;
+                        }
+                        dec /= 10;
+                    } else {
+                        if (negative) {
+                            val *= 10;
+                            val -= 5;
+                        } else {
+                            val *= 10;
+                            val += 5;
+                        }
+                    }
+                    if (decimal) {
+                        valor = String.valueOf(val);
+                    } else {
+                        valor = String.format("%.0f", val);
+                    }
+                    visor.setText(valor);
+                }
+                break;
+            case R.id.button6:
+                if(val  < 1.0E10) {
+                    if (decimal) {
+                        if (negative) {
+                            val -= dec * 6;
+                        } else {
+                            val += dec * 6;
+                        }
+                        dec /= 10;
+                    } else {
+                        if (negative) {
+                            val *= 10;
+                            val -= 6;
+                        } else {
+                            val *= 10;
+                            val += 6;
+                        }
+                    }
+                    if (decimal) {
+                        valor = String.valueOf(val);
+                    } else {
+                        valor = String.format("%.0f", val);
+                    }
+                    visor.setText(valor);
+                }
+                break;
+            case R.id.button7:
+                if(val  < 1.0E10) {
+                    if (decimal) {
+                        if (negative) {
+                            val -= dec * 7;
+                        } else {
+                            val += dec * 7;
+                        }
+                        dec /= 10;
+                    } else {
+                        if (negative) {
+                            val *= 10;
+                            val -= 7;
+                        } else {
+                            val *= 10;
+                            val += 7;
+                        }
+                    }
+                    if (decimal) {
+                        valor = String.valueOf(val);
+                    } else {
+                        valor = String.format("%.0f", val);
+                    }
+                    visor.setText(valor);
+                }
+                break;
+            case R.id.button8:
+                if(val  < 1.0E10) {
+                    if (decimal) {
+                        if (negative) {
+                            val -= dec * 8;
+                        } else {
+                            val += dec * 8;
+                        }
+                        dec /= 10;
+                    } else {
+                        if (negative) {
+                            val *= 10;
+                            val -= 8;
+                        } else {
+                            val *= 10;
+                            val += 8;
+                        }
+                    }
+                    if (decimal) {
+                        valor = String.valueOf(val);
+                    } else {
+                        valor = String.format("%.0f", val);
+                    }
+                    visor.setText(valor);
+                }
+                break;
+            case R.id.button9:
+                if(val  < 1.0E10) {
+                    if (decimal) {
+                        if (negative) {
+                            val -= dec * 9;
+                        } else {
+                            val += dec * 9;
+                        }
+                        dec /= 10;
+                    } else {
+                        if (negative) {
+                            val *= 10;
+                            val -= 9;
+                        } else {
+                            val *= 10;
+                            val += 9;
+                        }
+                    }
+                    if (decimal) {
+                        valor = String.valueOf(val);
+                    } else {
+                        valor = String.format("%.0f", val);
+                    }
+                    visor.setText(valor);
+                }
+                break;
+            case R.id.borrar:
+                decimal = false;
+                negative = false;
+                val = 0;
+                valor = String.format("%.0f", val);
+                visor.setText(valor);
+                break;
+            case R.id.sum:
+                decimal = false;
+                negative = false;
+                op = 1;
+                if (val != 0) {
+                    ant = val;
+                }
+                val = 0;
+                if (decimal){
+                    valor = String.valueOf(ant);
+                }
+                else {
+                    valor = String.format("%.0f", ant);
+                }
+                decimal = false;
+                visor.setText(valor);
+                break;
+
+            case R.id.minus:
+                if (val != 0) {
+                    negative = false;
+                    op = 2;
+                    if (val != 0) {
+                        ant = val;
+                    }
+                    val = 0;
+                    if (decimal){
+                        valor = String.valueOf(ant);
+                    }
+                    else {
+                        valor = String.format("%.0f", ant);
+                    }
+                    decimal = false;
+                    visor.setText(valor);
+                }
+                else {
+                    negative = true;
+                    valor = String.format("%.0f", ant);
+                    visor.setText(valor);
+                }
+                break;
+            case R.id.multi:
+
+                negative = false;
+                op = 3;
+                if (val != 0) {
+                    ant = val;
+                }
+                val = 0;
+                if (decimal){
+                    valor = String.valueOf(ant);
+                }
+                else {
+                    valor = String.format("%.0f", ant);
+                }
+                decimal = false;
+                visor.setText(valor);
+                break;
+            case R.id.divide:
+
+                negative = false;
+                op = 4;
+                if (val != 0) {
+                    ant = val;
+                }
+                val = 0;
+                if (decimal){
+                    valor = String.valueOf(ant);
+                }
+                else {
+                    valor = String.format("%.0f", ant);
+                }
+                decimal = false;
+                visor.setText(valor);
+                break;
+            case R.id.dot:
+                if (!decimal) {
+                    decimal = true;
+                    dec = 0.1;
+                }
+                break;
+            case R.id.ans:
+                val = ans;
+                valor = String.valueOf(val);
+                visor.setText(valor);
+                break;
+            case R.id.equal:
+                decimal = false;
+                negative = false;
+                switch (op) {
+                    case 1:
+                        val += ant;
+                        break;
+                    case 2:
+                        val = ant - val;
+                        break;
+                    case 3:
+                        val *= ant;
+                        break;
+                    case 4:
+                        if (0 == val){
+                            errores = true;
+
+                        }
+                        else {
+                            val = ant / val;
+                        }
+                        break;
+                }
+                if (errores == false){
+                    ans = val;
+                    valor = String.valueOf(val);
+                    visor.setText(valor);
+                }
+                else{
+                    switch (Notis) {
+                        case 1:
+                            Toast.makeText(getApplicationContext(), "Operacion Ilegal: Division entre 0", Toast.LENGTH_SHORT).show();
+                            break;
+                        case 2:
+                            Snackbar.make(v, "Operacion Ilegal: Division entre 0", Snackbar.LENGTH_LONG)
+                                    .show();
+                            break;
+                        case 3:
+                            //Entero que nos permite identificar la notificaci�n
+                            int mId = 1;
+                            //Instanciamos Notification Manager
+                            NotificationManager mNotificationManager =
+                                    (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
+
+                            NotificationCompat.Builder mBuilder =
+                                    new NotificationCompat.Builder(getApplicationContext())
+                                            .setSmallIcon(R.drawable.ic_warning_amber_48dp)
+                                            .setContentTitle("Operacion ilegal")
+                                            .setContentText("Has intentado dividir entre 0...");
+
+
+                            // Creamos un intent explicito, para abrir la app desde nuestra notificaci�n
+                            Intent resultIntent = new Intent(getApplicationContext(), Calculator.class);
+
+                            //El objeto stack builder contiene una pila artificial para la Acitivty empezada.
+                            //De esta manera, aseguramos que al navegar hacia atr�s
+                            //desde la Activity nos lleve a la home screen.
+
+                            //Desde donde la creamos
+                            TaskStackBuilder stackBuilder = TaskStackBuilder.create(getApplicationContext());
+                            // A�ade la pila para el Intent,pero no el intent en s�
+                            stackBuilder.addParentStack(Calculator.class);
+                            // A�adimos el intent que empieza la activity que est� en el top de la pila
+                            stackBuilder.addNextIntent(resultIntent);
+
+                            //El pending intent ser� el que se ejecute cuando la notificaci�n sea pulsada
+                            PendingIntent resultPendingIntent =
+                                    stackBuilder.getPendingIntent(
+                                            0,
+                                            PendingIntent.FLAG_UPDATE_CURRENT
+                                    );
+                            mBuilder.setContentIntent(resultPendingIntent);
+                            mNotificationManager.notify(mId, mBuilder.build());
+                            break;
+                        case 4:
+                            mId = 2;
+                            //Instanciamos Notification Manager
+                            mNotificationManager =
+                                    (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
+
+
+                            // Para la notificaciones, en lugar de crearlas directamente, lo hacemos mediante
+                            // un Builder/contructor.
+                            mBuilder =
+                                    new NotificationCompat.Builder(getApplicationContext())
+                                            .setSmallIcon(R.drawable.ic_warning_amber_48dp)
+                                            .setContentTitle("Holi")
+                                            .setContentText("No dividas entre 0 :)");
+
+                            // Creamos un intent explicito, para abrir la app desde nuestra notificaci�n
+                            resultIntent = new Intent(getApplicationContext(), Calculator.class);
+
+                            //El objeto stack builder contiene una pila artificial para la Acitivty empezada.
+                            //De esta manera, aseguramos que al navegar hacia atr�s
+                            //desde la Activity nos lleve a la home screen.
+
+                            stackBuilder = TaskStackBuilder.create(getApplicationContext());
+                            // Adds the back stack for the Intent (but not the Intent itself)
+                            stackBuilder.addParentStack(Calculator.class);
+                            // Adds the Intent that starts the Activity to the top of the stack
+                            stackBuilder.addNextIntent(resultIntent);
+
+                            //El pending intent ser� el que se ejecute cuando la notificaci�n sea pulsada
+                            resultPendingIntent =
+                                    stackBuilder.getPendingIntent(
+                                            1,
+                                            PendingIntent.FLAG_UPDATE_CURRENT
+                                    );
+                            mBuilder.setContentIntent(resultPendingIntent);
+
+                            // mId nos permite actualizar las notificaciones en un futuro
+                            // Notificamos
+                            Notification noti = mBuilder.build();
+                            noti.flags |= Notification.FLAG_INSISTENT;
+                            noti.flags |= Notification.FLAG_NO_CLEAR;
+                            noti.flags |= Notification.FLAG_SHOW_LIGHTS;
+                            noti.flags |= Notification.FLAG_NO_CLEAR;
+                            mNotificationManager.notify(mId, noti);
+                            break;
+                    }
+                    errores = false;
+                }
+                op = 0;
+                ant = val;
+                ans = val;
+                val = 0;
+                break;
+
+        }
+        Log.e("ans" , ""+ans);
+    }
+}
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/SignFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/SignFragment.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/SignFragment.java	(revision )
@@ -0,0 +1,231 @@
+package com.example.polpincho.proyectofinal;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.example.polpincho.proyectofinal.persistencia.BDUser;
+
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+
+public class SignFragment extends Fragment implements View.OnClickListener{
+    TextView usernamed;
+    EditText passone;
+    EditText passtwo;
+    EditText emaile;
+    Button ndlog;
+    Button ndexit;
+    Button back;
+    private OnFragmentInteractionListener mListener;
+
+    public SignFragment() {
+        // Required empty public constructor
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+    }
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+
+        View rootView = inflater.inflate(R.layout.fragment_sign, container, false);
+
+        usernamed = (TextView) rootView.findViewById(R.id.usernamesign);
+        passone = (EditText) rootView.findViewById(R.id.password);
+        passtwo = (EditText) rootView.findViewById(R.id.passwordconfirmation);
+        emaile = (EditText) rootView.findViewById(R.id.maile);
+        ndexit = (Button) rootView.findViewById(R.id.signndback);
+        ndlog = (Button) rootView.findViewById(R.id.signndlog);
+        back = (Button) rootView.findViewById(R.id.backsign);
+        back.setOnClickListener(this);
+        ndlog.setOnClickListener(this);
+        ndexit.setOnClickListener(this);
+
+        Bundle args = this.getArguments();
+        if (args != null){
+            usernamed.setText(args.getString("message"));
+        }else{
+            usernamed.setText("");
+        }
+        return rootView;
+    }
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (context instanceof OnFragmentInteractionListener) {
+            mListener = (OnFragmentInteractionListener) context;
+        } else {
+            throw new RuntimeException(context.toString()
+                    + " must implement OnFragmentInteractionListener");
+        }
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+        mListener = null;
+    }
+
+    public static final Pattern VALID_EMAIL_ADDRESS_REGEX =
+            Pattern.compile("^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$", Pattern.CASE_INSENSITIVE);
+
+    public static boolean validatemail(String emailStr) {
+        Matcher matcher = VALID_EMAIL_ADDRESS_REGEX.matcher(emailStr);
+        return matcher.find();
+    }
+
+    public static final Pattern VALID_PASS_ADDRESS_REGEX =
+            Pattern.compile("((?=.*[a-z])(?=.*\\d)(?=.*[A-Z]).{8,40})", Pattern.CASE_INSENSITIVE);
+
+    public static boolean validatepass(String passStr) {
+        Matcher matcher = VALID_PASS_ADDRESS_REGEX.matcher(passStr);
+        return matcher.find();
+    }
+
+
+
+    @Override
+    public void onClick(View v) {
+        switch (v.getId()){
+            case R.id.signndback:
+                String username = usernamed.getText().toString();
+                String passwan = passone.getText().toString();
+                String passchu = passtwo.getText().toString();
+                String imail = emaile.getText().toString();
+                boolean pass1 = false;
+                boolean pass2 = false;
+                boolean mail1 = false;
+
+                if (validatepass(passwan)) {
+                    pass1 = true;
+                }
+                else passone.setText("");
+
+                if (pass1){
+                    if (passwan.equals(passchu)){
+                        pass2 = true;
+                    }
+                    else{
+                        passtwo.setText("");
+                    }
+                }
+                else{
+                    passtwo.setText("");
+                }
+
+                if (validatemail(imail)) {
+                    mail1 = true;
+                }
+
+                if (pass1 && pass2 && mail1) {
+                    BDUser bduser = new BDUser(getContext());
+                    ContentValues valuesToStore = new ContentValues();
+                    valuesToStore.put("username", String.valueOf(username));
+                    valuesToStore.put("pass", String.valueOf(passwan));
+                    valuesToStore.put("mail", String.valueOf(imail));
+                    valuesToStore.put("keep", String.valueOf(false));
+                    valuesToStore.put("firstlog", String.valueOf(true));
+                    if (bduser.createUser(valuesToStore)) {
+                        Toast.makeText(getContext(), "insertion done", Toast.LENGTH_SHORT).show();
+                        if (mListener != null) {
+                            mListener.onFragmentInteraction(usernamed.getText().toString(), 3);
+                        } else {
+                        }
+                    } else
+                        Toast.makeText(getContext(), "error on insertion", Toast.LENGTH_SHORT).show();
+                }
+                else {
+                    Toast.makeText(getContext(), "incorrect data", Toast.LENGTH_SHORT).show();
+                }
+                break;
+            case R.id.signndlog:
+                username = usernamed.getText().toString();
+                passwan = passone.getText().toString();
+                passchu = passtwo.getText().toString();
+                imail = emaile.getText().toString();
+                pass1 = false;
+                pass2 = false;
+                mail1 = false;
+
+                if (validatepass(passwan)) {
+                    pass1 = true;
+                }
+                else passone.setText("");
+
+                if (pass1){
+                    if (passwan.equals(passchu)){
+                        pass2 = true;
+                    }
+                    else{
+                        passtwo.setText("");
+                    }
+                }
+                else{
+                    passtwo.setText("");
+                }
+
+                if (validatemail(imail)) {
+                    mail1 = true;
+                }
+
+                if (pass1 && pass2 && mail1) {
+                    BDUser bduser = new BDUser(getContext());
+                    ContentValues valuesToStore = new ContentValues();
+                    valuesToStore.put("username", String.valueOf(username));
+                    valuesToStore.put("pass", String.valueOf(passwan));
+                    valuesToStore.put("mail", String.valueOf(imail));
+                    valuesToStore.put("keep", String.valueOf(false));
+                    valuesToStore.put("firstlog", String.valueOf(true));
+                    if (bduser.createUser(valuesToStore)) {
+                        Toast.makeText(getContext(), "insertion done", Toast.LENGTH_SHORT).show();
+                        SharedPreferences settings = getActivity().getSharedPreferences("MEMORYAPK", 0);
+                        SharedPreferences.Editor editor = settings.edit();
+                        editor.putString("UserActivo",username);
+                        editor.apply();
+
+                        Toast.makeText(getContext(), "Loggin done", Toast.LENGTH_SHORT).show();
+                        Intent intent = new Intent(getContext(), Perfil.class);
+                        intent.putExtra("Username",username);
+                        startActivity(intent);
+                        if (mListener != null) {
+                            mListener.onFragmentInteraction("", 4);
+                        } else {
+                        }
+                    } else
+                        Toast.makeText(getContext(), "error on insertion", Toast.LENGTH_SHORT).show();
+                    bduser.close();
+                }
+                else {
+                    Toast.makeText(getContext(), "incorrect data", Toast.LENGTH_SHORT).show();
+                }
+                break;
+            case R.id.backsign:
+                if (mListener != null) {
+                    //En este caso, si no hay nada escrito en el EditText,
+                    //pondremos el String vació ""
+                    mListener.onFragmentInteraction(usernamed.getText().toString(),3);
+                }else {
+                    Log.v("Fragment1", "No listener attached");
+                }
+                break;
+            default:
+                Log.v("Fragment2", "Not a button");
+        }
+    }
+}
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/PagerHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/PagerHolder.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/PagerHolder.java	(revision )
@@ -0,0 +1,81 @@
+package com.example.polpincho.proyectofinal; /**
+ * Created by polpincho on 02/02/2016.
+ */
+import android.content.Intent;
+import android.content.pm.ActivityInfo;
+import android.graphics.Color;
+import android.os.Bundle;
+import android.support.design.widget.TabLayout;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentActivity;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v4.view.ViewPager;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.Menu;
+import android.view.MenuItem;
+
+public class PagerHolder extends AppCompatActivity implements OnFragmentInteractionListener {
+
+    ViewPager viewPager;
+    FragmentManager fm;
+    PagerAdapter pa;
+    String tags[] = new String[2];
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_pager_holder);
+
+        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
+
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar_page_holder);
+        setSupportActionBar(toolbar);
+        setTitle("Memory");
+
+        // Get the ViewPager and set it's PagerAdapter so that it can display items
+        viewPager = (ViewPager) findViewById(R.id.viewpager);
+        fm = getSupportFragmentManager();
+        pa = new PagerAdapter(fm,PagerHolder.this);
+        viewPager.setAdapter(pa);
+
+        // Give the TabLayout the ViewPager (material)
+        TabLayout tabLayout = (TabLayout) findViewById(R.id.sliding_tabs);
+        tabLayout.setTabTextColors(Color.parseColor("#8b8b8b"), Color.WHITE);
+        tabLayout.setupWithViewPager(viewPager);
+    }
+
+    public void onFragmentInteraction(String text, Integer from) {
+
+        if (from == 4 && text.equals("end")){
+            Intent i = new Intent(getApplicationContext(), InMenu.class);
+            startActivity(i);
+            finish();
+        }
+        if (from == 5){
+
+            Log.e("reload","pre");
+            Fragment frg = getSupportFragmentManager().findFragmentByTag(tags[1]);
+            final FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
+            ft.detach(frg);
+            ft.attach(frg);
+            ft.commit();
+            Log.e("reload","post");
+        }
+        if (from == 1) {
+            tags[0]=text;
+        }
+        if (from == 2){
+            tags[1]=text;
+        }
+    }
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        //getMenuInflater().inflate(R.menu.menu_pager_holder, menu);
+        return true;
+    }
+
+}
Index: ../Git final/Proyectofinal/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/.idea/misc.xml	(revision )
+++ ../Git final/Proyectofinal/.idea/misc.xml	(revision )
@@ -0,0 +1,46 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="EntryPointsManager">
+    <entry_points version="2.0" />
+  </component>
+  <component name="NullableNotNullManager">
+    <option name="myDefaultNullable" value="android.support.annotation.Nullable" />
+    <option name="myDefaultNotNull" value="android.support.annotation.NonNull" />
+    <option name="myNullables">
+      <value>
+        <list size="4">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.Nullable" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nullable" />
+          <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.Nullable" />
+          <item index="3" class="java.lang.String" itemvalue="android.support.annotation.Nullable" />
+        </list>
+      </value>
+    </option>
+    <option name="myNotNulls">
+      <value>
+        <list size="4">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.NotNull" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nonnull" />
+          <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.NonNull" />
+          <item index="3" class="java.lang.String" itemvalue="android.support.annotation.NonNull" />
+        </list>
+      </value>
+    </option>
+  </component>
+  <component name="ProjectLevelVcsManager" settingsEditedManually="false">
+    <OptionsSetting value="true" id="Add" />
+    <OptionsSetting value="true" id="Remove" />
+    <OptionsSetting value="true" id="Checkout" />
+    <OptionsSetting value="true" id="Update" />
+    <OptionsSetting value="true" id="Status" />
+    <OptionsSetting value="true" id="Edit" />
+    <ConfirmationsSetting value="0" id="Add" />
+    <ConfirmationsSetting value="0" id="Remove" />
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="true" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/build/classes" />
+  </component>
+  <component name="ProjectType">
+    <option name="id" value="Android" />
+  </component>
+</project>
\ No newline at end of file
Index: ../Git final/Proyectofinal/.idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/.idea/compiler.xml	(revision )
+++ ../Git final/Proyectofinal/.idea/compiler.xml	(revision )
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <resourceExtensions />
+    <wildcardResourcePatterns>
+      <entry name="!?*.java" />
+      <entry name="!?*.form" />
+      <entry name="!?*.class" />
+      <entry name="!?*.groovy" />
+      <entry name="!?*.scala" />
+      <entry name="!?*.flex" />
+      <entry name="!?*.kt" />
+      <entry name="!?*.clj" />
+      <entry name="!?*.aj" />
+    </wildcardResourcePatterns>
+    <annotationProcessing>
+      <profile default="true" name="Default" enabled="false">
+        <processorPath useClasspath="true" />
+      </profile>
+    </annotationProcessing>
+  </component>
+</project>
\ No newline at end of file
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Memory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Memory.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/Memory.java	(revision )
@@ -0,0 +1,454 @@
+package com.example.polpincho.proyectofinal;
+
+import android.app.AlertDialog;
+import android.content.ContentValues;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.database.Cursor;
+import android.net.Uri;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v7.app.ActionBar;
+import android.support.v7.app.ActionBarActivity;
+import android.support.v7.widget.CardView;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.ImageButton;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.example.polpincho.proyectofinal.persistencia.BDUser;
+
+import java.util.Arrays;
+import java.util.Random;
+
+
+public class Memory extends Fragment implements View.OnClickListener {
+
+
+    private int[] value;
+    private ImageButton[] button;
+    private TextView punt;
+    private CardView[] card;
+    private boolean[] filled;
+    private int i;
+    private boolean first = false;
+    private boolean second = false;
+    private int pri = -1;
+    private int seg = -1;
+    private int clicks = 0;
+    private int tryes = 0;
+
+    View rootView;
+    private OnFragmentInteractionListener mListener;
+
+    public Memory() {
+        // Required empty public constructor
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+    }
+
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        // Inflate the layout for this fragment
+        rootView = inflater.inflate(R.layout.fragment_memory, container, false);
+
+
+        button = new ImageButton[16];
+        card = new CardView[16];
+
+        setHasOptionsMenu(true);
+
+        punt = (TextView) rootView.findViewById(R.id.punt);
+        button[0] = (ImageButton) rootView.findViewById(R.id.button1);
+        button[1] = (ImageButton) rootView.findViewById(R.id.button2);
+        button[2] = (ImageButton) rootView.findViewById(R.id.button3);
+        button[3] = (ImageButton) rootView.findViewById(R.id.button4);
+        button[4] = (ImageButton) rootView.findViewById(R.id.button5);
+        button[5] = (ImageButton) rootView.findViewById(R.id.button6);
+        button[6] = (ImageButton) rootView.findViewById(R.id.button7);
+        button[7] = (ImageButton) rootView.findViewById(R.id.button8);
+        button[8] = (ImageButton) rootView.findViewById(R.id.button9);
+        button[9] = (ImageButton) rootView.findViewById(R.id.button10);
+        button[10] = (ImageButton) rootView.findViewById(R.id.button11);
+        button[11] = (ImageButton) rootView.findViewById(R.id.button12);
+        button[12] = (ImageButton) rootView.findViewById(R.id.button13);
+        button[13] = (ImageButton) rootView.findViewById(R.id.button14);
+        button[14] = (ImageButton) rootView.findViewById(R.id.button15);
+        button[15] = (ImageButton) rootView.findViewById(R.id.button16);
+
+        card[0] = (CardView) rootView.findViewById(R.id.card_view1);
+        card[1]= (CardView) rootView.findViewById(R.id.card_view2);
+        card[2]= (CardView) rootView.findViewById(R.id.card_view3);
+        card[3]= (CardView) rootView.findViewById(R.id.card_view4);
+        card[4]= (CardView) rootView.findViewById(R.id.card_view5);
+        card[5]= (CardView) rootView.findViewById(R.id.card_view6);
+        card[6]= (CardView) rootView.findViewById(R.id.card_view7);
+        card[7]= (CardView) rootView.findViewById(R.id.card_view8);
+        card[8]= (CardView) rootView.findViewById(R.id.card_view9);
+        card[9] = (CardView) rootView.findViewById(R.id.card_view10);
+        card[10] = (CardView) rootView.findViewById(R.id.card_view11);
+        card[11] = (CardView) rootView.findViewById(R.id.card_view12);
+        card[12] = (CardView) rootView.findViewById(R.id.card_view13);
+        card[13] = (CardView) rootView.findViewById(R.id.card_view14);
+        card[14] = (CardView) rootView.findViewById(R.id.card_view15);
+        card[15] = (CardView) rootView.findViewById(R.id.card_view16);
+
+        if (mListener != null) {
+            mListener.onFragmentInteraction(getTag(),1);
+        }else {
+            Log.v("Memory", "No listener attached");
+        }
+
+        for (int i =0; i<16; ++i){
+            button[i].setOnClickListener(this);
+        }
+
+        initialize();
+        return rootView;
+    }
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (context instanceof OnFragmentInteractionListener) {
+            mListener = (OnFragmentInteractionListener) context;
+        } else {
+            throw new RuntimeException(context.toString()
+                    + " must implement OnFragmentInteractionListener");
+        }
+    }
+
+    @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        inflater.inflate(R.menu.menu_pager_holder, menu);
+
+        super.onCreateOptionsMenu(menu, inflater);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()) {
+            case R.id.HolderRestart:
+                initialize();
+                return true;
+            case R.id.HolderLogOut:
+                SharedPreferences settings = getContext().getSharedPreferences("MEMORYAPK", Context.MODE_PRIVATE);
+                SharedPreferences.Editor editor = settings.edit();
+                editor.putBoolean("SessionActiva", false);
+                editor.apply();
+                Intent i = new Intent(getContext(), Login.class);
+                startActivity(i);
+                if (mListener != null) {
+                    mListener.onFragmentInteraction("end",4);
+                }else {
+                    Log.v("Fragment1", "No listener attached");
+                }
+                return true;
+        }
+        return super.onOptionsItemSelected(item);
+    }
+
+    public void initialize(){
+
+        for (int i =0; i<16; ++i){
+            button[i].setBackgroundResource(R.drawable.poke);
+            button[i].setBackground(getResources().getDrawable(R.drawable.poke));
+        }
+        first = false;
+        second = false;
+        pri = -1;
+        seg = -1;
+        clicks = 0;
+        tryes = 0;
+        value = new int[16];
+        filled = new boolean[16];
+        Arrays.fill(filled, Boolean.FALSE);
+        Arrays.fill(value, -1);
+
+        Random r = new Random();
+        int k = 16;
+        while (k > 0) {
+            int rand = r.nextInt(16);
+
+            if (!filled[rand]){
+                value[rand] = k;
+                filled[rand] = true;
+                --k;
+            }
+        }
+        tryes = 0;
+        punt.setText(tryes +" intentos");
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+        mListener = null;
+    }
+
+
+    @Override
+    public void onClick(View v) {
+        if (clicks < 2) {
+            switch (v.getId()) {
+                case R.id.button1:
+                    i = 0;
+                    break;
+                case R.id.button2:
+                    i = 1;
+                    break;
+                case R.id.button3:
+                    i = 2;
+                    break;
+                case R.id.button4:
+                    i = 3;
+                    break;
+                case R.id.button5:
+                    i = 4;
+                    break;
+                case R.id.button6:
+                    i = 5;
+                    break;
+                case R.id.button7:
+                    i = 6;
+                    break;
+                case R.id.button8:
+                    i = 7;
+                    break;
+                case R.id.button9:
+                    i = 8;
+                    break;
+                case R.id.button10:
+                    i = 9;
+                    break;
+                case R.id.button11:
+                    i = 10;
+                    break;
+                case R.id.button12:
+                    i = 11;
+                    break;
+                case R.id.button13:
+                    i = 12;
+                    break;
+                case R.id.button14:
+                    i = 13;
+                    break;
+                case R.id.button15:
+                    i = 14;
+                    break;
+                case R.id.button16:
+                    i = 15;
+                    break;
+            }
+            int aux = i;
+            turn(v, aux);
+
+            punt.setText(tryes +" intentos");
+        }
+
+    }
+
+    public void setimagen(int i) {
+
+        switch (value[i] % 8) {
+            case 0:
+                button[i].setBackgroundResource(R.drawable.sylv);
+                break;
+            case 1:
+                button[i].setBackgroundResource(R.drawable.jolt);
+                break;
+            case 2:
+                button[i].setBackgroundResource(R.drawable.vapo);
+                break;
+            case 3:
+                button[i].setBackgroundResource(R.drawable.flar);
+                break;
+            case 4:
+                button[i].setBackgroundResource(R.drawable.leaf);
+                break;
+            case 5:
+                button[i].setBackgroundResource(R.drawable.umb);
+                break;
+            case 6:
+                button[i].setBackgroundResource(R.drawable.glac);
+                break;
+            case 7:
+                button[i].setBackgroundResource(R.drawable.espe);
+                break;
+        }
+    }
+
+
+    private void turn(View v, int j) {
+        if (filled[j]) {
+            MyTask task = new MyTask();
+            if (first == false){
+                ++tryes;
+                pri = j;
+                first = true;
+                task.execute(j);
+                ++clicks;
+            }
+            else {
+                if (pri != j) {
+                    ++clicks;
+                    ++tryes;
+                    seg = j;
+                    second = true;
+                    task.execute(j);
+
+                }
+            }
+            task.onCancelled();
+        }
+        else finalized();
+    }
+
+
+    private class MyTask extends AsyncTask<Integer, Integer, String> {
+
+        @Override
+        protected void onPreExecute() {
+            //TODO: Cambia imagen
+            setimagen(i);
+            super.onPreExecute();
+        }
+
+        @Override
+        protected void onPostExecute(String s) {
+            //TODO: Restaurar
+            if (second) {
+                if (value[pri] % 8 == value[seg] % 8) {
+                    filled[pri] = false;
+                    filled[seg] = false;
+                } else {
+                    button[pri].setBackgroundResource(R.drawable.poke);
+                    button[seg].setBackgroundResource(R.drawable.poke);
+                }
+                pri = -1;
+                seg = -1;
+                first = false;
+                second= false;
+                clicks-=2;
+            }
+            super.onPostExecute(s);
+        }
+
+        @Override
+        protected String doInBackground(Integer... params) {
+            //TODO: Pausa
+            if (first) {
+                while (!second);
+            }
+            try {
+                Thread.sleep(500);
+            } catch (InterruptedException e) {
+                e.printStackTrace();
+            }
+            return null;
+        }
+
+        @Override
+        protected void onCancelled() {
+            super.onCancelled();
+        }
+    }
+
+    private void finalized() {
+        boolean end = false;
+        for(int k = 0; k< filled.length; ++k) end = end | filled[k];
+        end = !end;
+        if (end){
+            BDHelper bdhelp = new BDHelper();
+            bdhelp.execute(tryes);
+            AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
+            builder.setTitle("Partida finalizada");
+            builder.setMessage("Enhorabuena, tu puntuacion es " + tryes +".");
+            builder.setPositiveButton("Ok",
+                    new DialogInterface.OnClickListener() {
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+                            if (mListener != null) {
+                                mListener.onFragmentInteraction("end",4);
+                            }else {
+                                Log.v("Fragment1", "No listener attached");
+                            }
+                        }
+                    });
+            builder.setNegativeButton("Replay",
+                    new DialogInterface.OnClickListener() {
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+                            initialize();
+                            mListener.onFragmentInteraction(getTag(), 5);
+                        }
+                    });
+            AlertDialog dialog = builder.create();
+            dialog.show();
+        }
+    }
+
+    private class BDHelper extends AsyncTask<Integer, Integer, String> {
+
+        @Override
+        protected void onPreExecute() {
+            super.onPreExecute();
+        }
+
+        @Override
+        protected void onPostExecute(String s) {
+
+            super.onPostExecute(s);
+        }
+
+        @Override
+        protected String doInBackground(Integer... params) {
+            //Instanciamos el SharedPreferences
+            SharedPreferences settings = getContext().getSharedPreferences("MEMORYAPK", Context.MODE_PRIVATE);
+            //Consultamos
+            String User = settings.getString("UserActivo", "Guest");
+            BDUser bdUser = new BDUser(getContext());
+
+            Cursor c= bdUser.getPointsByUsername(User);
+            if (c.moveToFirst()){
+                int bestpunt = c.getInt(c.getColumnIndex("bstpunt"));
+                if (bestpunt == 0 || bestpunt> params[0]) {
+                    ContentValues values = new ContentValues();
+                    values.put("bstpunt", params[0]);
+                    boolean aux = bdUser.updatePoints(values, User);
+                    Log.e("Puto update", "" + aux);
+
+                }
+            }
+            c.close();
+            bdUser.close();
+            return null;
+        }
+
+        @Override
+        protected void onCancelled() {
+            super.onCancelled();
+        }
+    }
+
+
+}
Index: ../Git final/Proyectofinal/app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/proguard-rules.pro	(revision )
+++ ../Git final/Proyectofinal/app/proguard-rules.pro	(revision )
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in C:\Users\polpincho\AppData\Local\Android\sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/BadLogFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/BadLogFragment.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/BadLogFragment.java	(revision )
@@ -0,0 +1,115 @@
+package com.example.polpincho.proyectofinal;
+
+import android.content.Context;
+import android.content.Intent;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.net.Uri;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+import android.support.v4.app.Fragment;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.ImageView;
+
+import java.io.InputStream;
+import java.net.URL;
+
+import butterknife.Bind;
+import butterknife.ButterKnife;
+
+
+public class BadLogFragment extends Fragment implements View.OnClickListener{
+    private OnFragmentInteractionListener mListener;
+
+
+    @Bind(R.id.imageView)
+    ImageView imageView;
+    Button nextButton;
+    View rootView;
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+
+        rootView = inflater.inflate(R.layout.fragment_bad_log, container, false);
+        imageView = (ImageView) rootView.findViewById(R.id.imageView);
+        nextButton = (Button) rootView.findViewById(R.id.nextButton);
+        nextButton.setOnClickListener(this);
+        ButterKnife.bind(rootView);
+        downloadImage(imageView);
+
+        return rootView;
+    }
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (context instanceof OnFragmentInteractionListener) {
+            mListener = (OnFragmentInteractionListener) context;
+        } else {
+            throw new RuntimeException(context.toString()
+                    + " must implement OnFragmentInteractionListener");
+        }
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+        mListener = null;
+    }
+
+    private Handler mhHandler = new Handler() {
+        public void handleMessage(android.os.Message msg) {
+            if (msg.what == 100 && msg.obj != null) {
+                imageView.setImageBitmap((Bitmap) msg.obj);
+            }
+        }
+    };
+
+
+    public void downloadImage(View v) {
+        new Thread(new Runnable() {
+            private Bitmap loadImageFromNetwork(String url) {
+                try {
+                    Bitmap bitmap = BitmapFactory
+                            .decodeStream((InputStream) new URL(url)
+                                    .getContent());
+                    return bitmap;
+                } catch (Exception e) {
+                    e.printStackTrace();
+                }
+                return null;
+            }
+
+            public void run() {
+                final Bitmap bitmap = loadImageFromNetwork("http://www.bolooka.com/img/error_page_logo.png");
+                Message msg = new Message();
+                msg.what = 100;
+                msg.obj = bitmap;
+                mhHandler.sendMessage(msg);
+            }
+        }).start();
+    }
+
+    @Override
+    public void onClick(View v) {
+        switch (v.getId()) {
+            case R.id.nextButton:
+                if (mListener != null) {
+                    mListener.onFragmentInteraction("", 3);
+                } else {
+                }
+                break;
+        }
+    }
+}
\ No newline at end of file
Index: ../Git final/Proyectofinal/.idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/.idea/runConfigurations.xml	(revision )
+++ ../Git final/Proyectofinal/.idea/runConfigurations.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RunConfigurationProducerService">
+    <option name="ignoredProducers">
+      <set>
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
+      </set>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: ../Git final/Proyectofinal/app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/values/styles.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/values/styles.xml	(revision )
@@ -0,0 +1,15 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.NoActionBar">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark" />
+
+    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Dark" />
+
+</resources>
Index: ../Git final/Proyectofinal/app/src/androidTest/java/com/example/polpincho/proyectofinal/ApplicationTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/androidTest/java/com/example/polpincho/proyectofinal/ApplicationTest.java	(revision )
+++ ../Git final/Proyectofinal/app/src/androidTest/java/com/example/polpincho/proyectofinal/ApplicationTest.java	(revision )
@@ -0,0 +1,13 @@
+package com.example.polpincho.proyectofinal;
+
+import android.app.Application;
+import android.test.ApplicationTestCase;
+
+/**
+ * <a href="http://d.android.com/tools/testing/testing_android.html">Testing Fundamentals</a>
+ */
+public class ApplicationTest extends ApplicationTestCase<Application> {
+    public ApplicationTest() {
+        super(Application.class);
+    }
+}
\ No newline at end of file
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/persistencia/BDUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/persistencia/BDUser.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/persistencia/BDUser.java	(revision )
@@ -0,0 +1,303 @@
+package com.example.polpincho.proyectofinal.persistencia;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteOpenHelper;
+import android.util.Log;
+
+public class BDUser extends SQLiteOpenHelper {
+
+
+    //Declaracion del nombre de la base de datos
+    public static final int DATABASE_VERSION = 1;
+
+    //Declaracion global de la version de la base de datos
+    public static final String DATABASE_NAME = "users1";
+
+    //Declaracion del nombre de la tabla
+    public static final String USER_TABLE ="Users";
+
+    //sentencia global de cracion de la base de datos
+    public static final String USER_TABLE_CREATE = "CREATE TABLE " + USER_TABLE + " (username TEXT PRIMARY KEY UNIQUE, pass TEXT, mail TEXT UNIQUE, bstpunt INTEGER, firstlog BOOLEAN, keep BOOLEAN, notis INTEGER, uri TEXT);";
+
+
+
+    public BDUser(Context context) {
+        super(context, DATABASE_NAME, null, DATABASE_VERSION);
+    }
+
+    @Override
+    public void onCreate(SQLiteDatabase db) {
+        db.execSQL(USER_TABLE_CREATE);
+
+    }
+
+
+    //obtener una lista de users
+    public Cursor getAllUsersPunt() {
+        SQLiteDatabase db = this.getReadableDatabase();
+        String[] columns = {"username","mail","bstpunt","uri"};
+        Cursor c = db.query(
+                USER_TABLE,  // The table to query
+                columns,    // The columns to return
+                "bstpunt!=0",       // The columns for the WHERE clause
+                null,       // The values for the WHERE clause
+                null,       // don't group the rows
+                null,       // don't filter by row groups
+                "bstpunt ASC"        // The sort order
+        );
+        return c;
+    }
+
+    public Cursor getAllUsers() {
+        SQLiteDatabase db = this.getReadableDatabase();
+        String[] columns = {"username","mail","bstpunt","uri"};
+        Log.d("BDUser", "get All Users");
+        Cursor c = db.query(
+                USER_TABLE,  // The table to query
+                columns,    // The columns to return
+                null,       // The columns for the WHERE clause
+                null,       // The values for the WHERE clause
+                null,       // don't group the rows
+                null,       // don't filter by row groups
+                null        // The sort order
+        );
+        return c;
+    }
+
+    public Cursor getUri(String user) {
+        SQLiteDatabase db = this.getReadableDatabase();
+        String[] columns = {"uri"};
+        String[] colum = {user};
+        Cursor c = db.query(
+                USER_TABLE,  // The table to query
+                columns,    // The columns to return
+                "username=?",       // The columns for the WHERE clause
+                colum,       // The values for the WHERE clause
+                null,       // don't group the rows
+                null,       // don't filter by row groups
+                null        // The sort order
+        );
+        return c;
+    }
+
+    public Cursor getfirstLog(String user) {
+        SQLiteDatabase db = this.getReadableDatabase();
+        String[] columns = {"firstlog"};
+        String[] colum = {user};
+        Log.d("BDUser", "Get first" + " " + user);
+        Cursor c = db.query(
+                USER_TABLE,  // The table to query
+                columns,    // The columns to return
+                "username=?",       // The columns for the WHERE clause
+                colum,       // The values for the WHERE clause
+                null,       // don't group the rows
+                null,       // don't filter by row groups
+                null        // The sort order
+        );
+        return c;
+    }
+
+    public Cursor getKeepLog(String user) {
+        SQLiteDatabase db = this.getReadableDatabase();
+        String[] columns = {"keep"};
+        String[] colum = {user};
+        Log.d("BDUser", "Get keep Log" + " " + user);
+        Cursor c = db.query(
+                USER_TABLE,  // The table to query
+                columns,    // The columns to return
+                "username=?",       // The columns for the WHERE clause
+                colum,       // The values for the WHERE clause
+                null,       // don't group the rows
+                null,       // don't filter by row groups
+                null        // The sort order
+        );
+        return c;
+    }
+
+    public Cursor getNotis(String user) {
+        SQLiteDatabase db = this.getReadableDatabase();
+        String[] columns = {"notis"};
+        String[] colum = {user};
+        Cursor c = db.query(
+                USER_TABLE,  // The table to query
+                columns,    // The columns to return
+                "username=?",       // The columns for the WHERE clause
+                colum,       // The values for the WHERE clause
+                null,       // don't group the rows
+                null,       // don't filter by row groups
+                null        // The sort order
+        );
+        return c;
+    }
+
+
+    public Cursor getPassByUsername(String username) {
+        SQLiteDatabase db = this.getReadableDatabase();
+        String[] columns = {"pass"};
+        String[] where = {username};
+        Cursor c = db.query(
+                USER_TABLE,  // The table to query
+                columns,    // The columns to return
+                "username=?",   // The columns for the WHERE clause
+                where,      // The values for the WHERE clause
+                null,       // don't group the rows
+                null,       // don't filter by row groups
+                null        // The sort order
+        );
+        return c;
+    }
+
+    public Cursor getPointsByUsername(String username) {
+        SQLiteDatabase db = this.getReadableDatabase();
+        String[] columns = {"bstpunt"};
+        String[] where = {username};
+        Cursor c = db.query(
+                USER_TABLE,  // The table to query
+                columns,    // The columns to return
+                "username=?",   // The columns for the WHERE clause
+                where,      // The values for the WHERE clause
+                null,       // don't group the rows
+                null,       // don't filter by row groups
+                null        // The sort order
+        );
+        return c;
+    }
+
+
+    public boolean createUser (ContentValues values) {
+        SQLiteDatabase db = this.getWritableDatabase();
+        values.put("uri","NULL");
+        long e = db.insert(
+                USER_TABLE,
+                null,
+                values);
+        Log.d("BDUser", "createUser " +e);
+        if (e == -1){
+            return false;
+        }
+        return true;
+
+    }
+//TODO:
+    public boolean updatePoints (ContentValues values,String user) {
+        SQLiteDatabase db = this.getWritableDatabase();
+        String[] val = {user};
+        long f = db.update(USER_TABLE, values, "username=?", val);
+
+        Log.d("BDUser", "updatePoints " + f + " " + user);
+        //db.execSQL("UPDATE Users SET bstpunt="+val[1]+" WHERE username='"+user +"' AND (bstpunt>"+ val[1] + " OR bstpunt=0)");
+        //Log.wtf("Update", f + "" + values.getAsInteger("bstpunt").toString());
+
+        if (f == -1) {
+            return false;
+        }
+
+        return true;
+    }
+
+    public boolean ResetPoints () {
+        ContentValues values = new ContentValues();
+        values.put("bstpunt", 0);
+        SQLiteDatabase db = this.getWritableDatabase();
+        long f = db.update(USER_TABLE, values, "bstpunt!=0", null);
+
+        Log.d("BDUser", "ResetPoints " +f);
+        if (f == -1) {
+            return false;
+        }
+
+        return true;
+    }
+
+    public boolean updatekeeplogged (Boolean aux,String user) {
+        SQLiteDatabase db = this.getWritableDatabase();
+        ContentValues values = new ContentValues();
+        values.put("keep", aux);
+        String[] val = {user};
+        long f = db.update(USER_TABLE, values, "username=?", val);
+        Log.d("BDUser", "update keep " +f  + " " + user);
+        if (f == -1) {
+            return false;
+        }
+
+        return true;
+    }
+
+    public boolean updatenotis (int not,String user) {
+        SQLiteDatabase db = this.getWritableDatabase();
+        ContentValues values = new ContentValues();
+        values.put("notis",not);
+        String[] val = {user};
+        long f = db.update(USER_TABLE, values, "username=?", val);
+        Log.d("BDUser", "update notis " + f  + " " + user);
+        if (f == -1) {
+            return false;
+        }
+        return true;
+    }
+
+    public boolean FirstLog (String user) {
+        SQLiteDatabase db = this.getWritableDatabase();
+        boolean aux = false;
+        ContentValues values = new ContentValues();
+        values.put("firstlog",aux);
+        String[] val = {user};
+        long f = db.update(USER_TABLE, values, "username=?", val);
+        Log.d("BDUser", "FirstLog " +f  + " " + user);
+        if (f == -1) {
+            return false;
+        }
+        return true;
+    }
+
+    @Override
+    public void onUpgrade(SQLiteDatabase sqLiteDatabase, int i, int i2) {
+
+    }
+
+
+    public Cursor getUser(String use) {
+        SQLiteDatabase db = this.getReadableDatabase();
+        String[] columns = {"username","mail","bstpunt","firstlog","keep","notis","uri"};
+        String[] where = {use};
+        Cursor c = db.query(
+                USER_TABLE,  // The table to query
+                columns,    // The columns to return
+                "username=?",   // The columns for the WHERE clause
+                where,      // The values for the WHERE clause
+                null,       // don't group the rows
+                null,       // don't filter by row groups
+                null        // The sort order
+        );
+        return c;
+    }
+
+    public boolean updateEdit(ContentValues values, String user) {
+        SQLiteDatabase db = this.getWritableDatabase();
+        String[] val = {user};
+        long f = db.update(USER_TABLE, values, "username=?", val);
+        Log.d("BDUser", "update edit " +f + " " + user);
+        if (f == -1) {
+            return false;
+        }
+        return true;
+    }
+
+    public boolean ResetPointsUser(String user) {
+        ContentValues values = new ContentValues();
+        values.put("bstpunt", 0);
+        SQLiteDatabase db = this.getWritableDatabase();
+        String[] val = {user};
+        long f = db.update(USER_TABLE, values, "username=?", val);
+
+        Log.d("BDUser", "ResetPointsUser " +f);
+        if (f == -1) {
+            return false;
+        }
+
+        return true;
+    }
+}
Index: ../Git final/Proyectofinal/app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/values/colors.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/values/colors.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="colorPrimary">#3F51B5</color>
+    <color name="colorPrimaryDark">#303F9F</color>
+    <color name="colorAccent">#FF4081</color>
+</resources>
Index: ../Git final/Proyectofinal/.idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/.idea/gradle.xml	(revision )
+++ ../Git final/Proyectofinal/.idea/gradle.xml	(revision )
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <option name="distributionType" value="LOCAL" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="gradleHome" value="C:\Program Files\Android\Android Studio\gradle\gradle-2.8" />
+        <option name="gradleJvm" value="1.8" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+            <option value="$PROJECT_DIR$/app" />
+          </set>
+        </option>
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/IniFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/IniFragment.java	(revision )
+++ ../Git final/Proyectofinal/app/src/main/java/com/example/polpincho/proyectofinal/IniFragment.java	(revision )
@@ -0,0 +1,185 @@
+package com.example.polpincho.proyectofinal;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.content.Intent;
+import android.content.SharedPreferences;
+import android.database.Cursor;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.Toast;
+
+import com.example.polpincho.proyectofinal.persistencia.BDUser;
+
+
+public class IniFragment extends Fragment implements View.OnClickListener{
+    private OnFragmentInteractionListener mListener;
+    EditText userna;
+    Button log;
+    Button sign;
+    String use;
+
+    public IniFragment() {
+        // Required empty public constructor
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        // Inflate the layout for this fragment
+        View rootView = inflater.inflate(R.layout.fragment_ini, container, false);
+
+        userna = (EditText) rootView.findViewById(R.id.usernameini);
+        log = (Button) rootView.findViewById(R.id.log);
+        log.setOnClickListener(this);
+        sign = (Button) rootView.findViewById(R.id.sign);
+        sign.setOnClickListener(this);
+
+        //Instanciamos el SharedPreferences
+        SharedPreferences settings = getActivity().getSharedPreferences("MEMORYAPK", Context.MODE_PRIVATE);
+        //Consultamos
+        use = settings.getString("UserActivo", "");
+        Boolean active = settings.getBoolean("SessionActiva", false);
+        if (active){
+            Intent i = new Intent(getContext(),InMenu.class);
+            startActivity(i);
+            if (mListener != null) {
+                mListener.onFragmentInteraction("", 4);
+            } else {
+            }
+        }
+        else {
+            SharedPreferences.Editor editor = settings.edit();
+            editor.putString("UserActivo", "");
+            editor.apply();
+            userna.setText(use);
+
+
+        }
+        return rootView;
+    }
+
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (context instanceof OnFragmentInteractionListener) {
+            mListener = (OnFragmentInteractionListener) context;
+        } else {
+            throw new RuntimeException(context.toString()
+                    + " must implement OnFragmentInteractionListener");
+        }
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+        mListener = null;
+    }
+
+    //Importante! Aquí no se puede usar el método del "onClick" en xml
+    // por que referencia a la Activity y no al fragment!!
+    @Override
+    public void onClick(View v) {
+        switch (v.getId()){
+            case R.id.sign:
+                String use = userna.getText().toString();
+                if (use.length() >0) {
+                    BDUser bdUser = new BDUser(getContext());
+                    Cursor c = bdUser.getUser(use);
+                    if (!c.moveToFirst()) {
+                        if (mListener != null) {
+                            mListener.onFragmentInteraction(userna.getText().toString(), 2);
+                        } else {
+                        }
+                    } else {
+                        Toast.makeText(getContext(), "User already exists", Toast.LENGTH_SHORT).show();
+                    }
+                    c.close();
+                    bdUser.close();
+                }
+                else Toast.makeText(getContext(), "Introduce your username", Toast.LENGTH_SHORT).show();
+                break;
+            case R.id.log:
+                use = userna.getText().toString();
+                BDUser bdUser = new BDUser(getContext());
+                Cursor c = bdUser.getKeepLog(use);
+                if (c.moveToFirst()) {
+                    boolean aux = c.getInt(c.getColumnIndex("keep")) > 0;
+                    Log.e("keep", aux+"");
+                    if (aux){
+                        SharedPreferences settings = getActivity().getSharedPreferences("MEMORYAPK", 0);
+                        SharedPreferences.Editor editor = settings.edit();
+                        editor.putString("UserActivo", use);
+                        editor.putBoolean("SessionActiva", true);
+                        editor.apply();
+                        Intent i = new Intent(getContext(),InMenu.class);
+                        startActivity(i);
+                        if (mListener != null) {
+                            mListener.onFragmentInteraction("", 4);
+                        } else {
+                        }
+                    }
+                    else{
+                        if (mListener != null) {
+                            mListener.onFragmentInteraction(userna.getText().toString(), 1);
+                        } else {
+                        }
+                    }
+                }
+                else {
+                    Toast.makeText(getContext(), "User don't exists", Toast.LENGTH_SHORT).show();
+                }
+                c.close();
+                bdUser.close();
+                break;
+            default:
+                Log.v("Fragment1","Not a button");
+        }
+    }
+    private class BDHelper extends AsyncTask<Integer, Integer, String> {
+
+        @Override
+        protected void onPreExecute() {
+            super.onPreExecute();
+        }
+
+        @Override
+        protected void onPostExecute(String s) {
+
+            super.onPostExecute(s);
+        }
+
+        @Override
+        protected String doInBackground(Integer... params) {
+            //Instanciamos el SharedPreferences
+            SharedPreferences settings = getContext().getSharedPreferences("MEMORYAPK", Context.MODE_PRIVATE);
+            //Consultamos
+            String User = settings.getString("UserActivo", "Guest");
+            BDUser bdUser = new BDUser(getContext());
+            boolean kip = false;
+            if (params[0]==1)kip= true;
+            boolean aux = bdUser.updatekeeplogged(kip,User);
+            bdUser.close();
+            return null;
+        }
+
+        @Override
+        protected void onCancelled() {
+            super.onCancelled();
+        }
+    }
+
+}
\ No newline at end of file
Index: ../Git final/Proyectofinal/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/.idea/vcs.xml	(revision )
+++ ../Git final/Proyectofinal/.idea/vcs.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/../Git final" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: ../Git final/Proyectofinal/app/src/main/res/layout/fragment_view_perfil.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout/fragment_view_perfil.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout/fragment_view_perfil.xml	(revision )
@@ -0,0 +1,108 @@
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:layout_gravity="center"
+    android:gravity="center"
+    android:layout_margin="15dp">
+
+    <LinearLayout
+        android:orientation="horizontal"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:gravity="top">
+
+        <ImageView
+            android:layout_width="150dp"
+            android:layout_height="150dp"
+            android:id="@+id/ViewIcon"
+            android:src="@drawable/default_user"
+            android:scaleType="centerCrop"
+            android:adjustViewBounds="true"
+            android:maxHeight="200dp"
+            android:maxWidth="200dp"
+            android:layout_gravity="center" />
+
+        <LinearLayout
+            android:orientation="vertical"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:textAppearance="?android:attr/textAppearanceLarge"
+                android:text="Username"
+                android:id="@+id/ViewUsername"
+                android:layout_marginTop="20dp"
+                android:layout_marginBottom="20dp"
+                android:layout_gravity="center_horizontal" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:textAppearance="?android:attr/textAppearanceLarge"
+                android:text="Email"
+                android:id="@+id/ViewEmail"
+                android:layout_marginTop="20dp"
+                android:layout_marginBottom="20dp"
+                android:layout_gravity="center_horizontal" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:textAppearance="?android:attr/textAppearanceLarge"
+                android:text="Score"
+                android:id="@+id/ViewBestScore"
+                android:layout_marginTop="20dp"
+                android:layout_marginBottom="20dp"
+                android:layout_gravity="center_horizontal" />
+        </LinearLayout>
+    </LinearLayout>
+
+    <LinearLayout
+        android:orientation="horizontal"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:gravity="center"
+        android:layout_marginRight="50dp"
+        android:layout_marginLeft="50dp">
+
+        <Button
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="Edit"
+            android:id="@+id/ViewEditButton"
+            android:layout_weight="1" />
+
+        <Button
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="Menu"
+            android:id="@+id/ViewBackButton"
+            android:layout_weight="1" />
+    </LinearLayout>
+
+    <Button
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Log Out"
+        android:id="@+id/ViewLogOut" />
+
+    <LinearLayout
+        android:orientation="horizontal"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_horizontal">
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:id="@+id/GPS1"
+            android:layout_weight="1"
+            android:gravity="center" />
+
+    </LinearLayout>
+
+</LinearLayout>
Index: ../Git final/Proyectofinal/app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/AndroidManifest.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/AndroidManifest.xml	(revision )
@@ -0,0 +1,48 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.example.polpincho.proyectofinal">
+
+    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
+    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
+
+
+    <service android:name=".BoundService">
+        <intent-filter>
+            <action android:name="BOUNDSERVICE" />
+        </intent-filter>
+    </service>
+
+    <application
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_bug_report_grey600_48dp"
+        android:label="@string/app_name"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme">
+        <activity android:name=".Login">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity android:name=".InMenu" />
+        <activity
+            android:name=".PagerHolder"
+            android:label="@string/app_name" />
+        <activity android:name=".Reproductor" />
+        <activity android:name=".Calculator" />
+
+
+        <activity android:name=".Perfil" />
+
+        <service
+            android:name=".MediaPlayerServ"
+            android:enabled="true"
+            android:exported="true"></service>
+    </application>
+
+</manifest>
Index: ../Git final/Proyectofinal/app/src/main/res/menu/menu_perfil_edit.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/menu/menu_perfil_edit.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/menu/menu_perfil_edit.xml	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    tools:context="com.example.polpincho.proyectofinal.Perfil">
+
+    <item android:id="@+id/PerfilEditExit"
+        android:title="Log Out"
+        android:icon="@drawable/ic_exit_to_app_white_48dp"
+        app:showAsAction="ifRoom">
+    </item>
+
+</menu>
\ No newline at end of file
Index: ../Git final/Proyectofinal/app/src/main/res/layout/fragment_sign.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../Git final/Proyectofinal/app/src/main/res/layout/fragment_sign.xml	(revision )
+++ ../Git final/Proyectofinal/app/src/main/res/layout/fragment_sign.xml	(revision )
@@ -0,0 +1,109 @@
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    tools:context="com.example.polpincho.proyectofinal.SignFragment">
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <LinearLayout
+            android:orientation="vertical"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_marginLeft="50dp"
+            android:layout_marginRight="50dp"
+            android:layout_alignParentBottom="true"
+            android:layout_centerHorizontal="true"
+            android:layout_below="@+id/toolbar"
+            android:gravity="center"
+            android:layout_margin="50dp">
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:id="@+id/usernamesign"
+                android:hint="Username"
+                android:layout_alignParentTop="true"
+                android:layout_alignStart="@+id/password"
+                android:textSize="20dp"
+                android:layout_marginBottom="20dp" />
+
+            <EditText
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:inputType="textEmailAddress"
+                android:ems="10"
+                android:id="@+id/maile"
+                android:hint="E-mail"
+                android:layout_marginBottom="10dp" />
+
+            <EditText
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:inputType="textPassword"
+                android:ems="10"
+                android:id="@+id/password"
+                android:hint="Password"
+                android:layout_below="@+id/usernamelog"
+                android:layout_alignParentStart="true"
+                android:layout_alignParentEnd="true"
+                android:layout_marginBottom="10dp" />
+
+            <EditText
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:inputType="textPassword"
+                android:ems="10"
+                android:id="@+id/passwordconfirmation"
+                android:hint="Confirm Password"
+                android:layout_below="@+id/usernamelog"
+                android:layout_alignParentStart="true"
+                android:layout_alignParentEnd="true" />
+
+            <LinearLayout
+                android:orientation="horizontal"
+                android:layout_width="match_parent"
+                android:layout_height="62dp"
+                android:layout_alignBottom="@+id/password"
+                android:layout_gravity="top"
+                android:layout_marginTop="30dp">
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="72dp"
+                    android:text="Register &amp; Exit"
+                    android:id="@+id/signndback"
+                    android:layout_below="@+id/password"
+                    android:layout_centerHorizontal="true"
+                    android:layout_weight="1" />
+
+                <Button
+                    android:layout_width="match_parent"
+                    android:layout_height="72dp"
+                    android:text="REGISTER &amp; ENTER"
+                    android:id="@+id/signndlog"
+                    android:layout_below="@+id/password"
+                    android:layout_alignParentEnd="true"
+                    android:layout_alignParentStart="true"
+                    android:layout_weight="1" />
+
+            </LinearLayout>
+
+            <Button
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="Back"
+                android:id="@+id/backsign"
+                android:layout_gravity="center_horizontal"
+                android:layout_marginTop="20dp" />
+
+        </LinearLayout>
+    </RelativeLayout>
+
+</FrameLayout>
